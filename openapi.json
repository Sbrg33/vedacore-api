{
  "openapi": "3.1.0",
  "info": {
    "title": "VedaCore Signals API",
    "description": "High-precision KP ephemeris calculations for trading signals",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/jyotish/chart": {
      "post": {
        "tags": [
          "Jyotish"
        ],
        "summary": "Generate Vedic Chart",
        "description": "Calculate basic Vedic chart with planets, houses, and essential points.\n\nReturns planet positions, house cusps with lords, ascendant and MC.\nAll calculations use sidereal zodiac with specified ayanamsha.",
        "operationId": "calculate_chart_api_v1_jyotish_chart_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__v1__jyotish__ChartRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jyotish/transits/window": {
      "post": {
        "tags": [
          "Jyotish"
        ],
        "summary": "Analyze Transit Window",
        "description": "Analyze transits within specified time window.\n\nReturns significant transit events, aspects, and overall window scoring\nfor timing decisions.",
        "operationId": "analyze_transit_window_api_v1_jyotish_transits_window_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransitsWindowRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jyotish/varga/{varga_type}": {
      "post": {
        "tags": [
          "Jyotish"
        ],
        "summary": "Calculate Varga Chart",
        "description": "Calculate divisional chart (Varga) for specified division.\n\nSupports standard Varga divisions: d9 (navamsa), d10 (dasamsa), \nd60 (shashtyamsa), etc.",
        "operationId": "calculate_varga_api_v1_jyotish_varga__varga_type__post",
        "parameters": [
          {
            "name": "varga_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Varga Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VargaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jyotish/panchanga": {
      "post": {
        "tags": [
          "Jyotish"
        ],
        "summary": "Calculate Panchanga",
        "description": "Calculate Panchanga (five limbs) for given time and place.\n\nReturns Tithi, Vara, Nakshatra, Yoga, Karana and timing windows.",
        "operationId": "calculate_panchanga_api_v1_jyotish_panchanga_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseVedicRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/chart": {
      "post": {
        "tags": [
          "KP"
        ],
        "summary": "Generate KP Chart",
        "description": "Calculate complete KP chart with cusps, sub-lords, and significators.\n\nReturns KP house cusps with sub-lords, planet positions with \nNakshatra/Pada, and house significators if requested.",
        "operationId": "calculate_kp_chart_api_v1_kp_chart_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__v1__kp__ChartRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/chain": {
      "post": {
        "tags": [
          "KP"
        ],
        "summary": "Calculate KP Chain",
        "description": "Calculate KP chain (Nakshatra Lord \u2192 Sub Lord \u2192 Sub-Sub Lord) for target.\n\nAccepts planet or cusp as target and returns complete chain analysis\nwith degrees, Nakshatra/Pada information, and house context.",
        "operationId": "calculate_kp_chain_api_v1_kp_chain_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/ruling-planets": {
      "post": {
        "tags": [
          "KP"
        ],
        "summary": "Calculate KP Ruling Planets",
        "description": "Calculate KP Ruling Planets for given time and place.\n\nReturns time-based ruling planets following traditional KP methods\nwith day lord analysis if requested.",
        "operationId": "calculate_ruling_planets_api_v1_kp_ruling_planets_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__v1__kp__RulingPlanetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/horary": {
      "post": {
        "tags": [
          "KP"
        ],
        "summary": "Calculate KP Horary",
        "description": "Calculate KP Horary chart using number (1-249) or datetime mode.\n\nTraditional KP horary analysis for Prashna (questions).\nSupports both number-based and time-based horary methods.",
        "operationId": "calculate_kp_horary_api_v1_kp_horary_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__v1__kp__HoraryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/transit-events": {
      "post": {
        "tags": [
          "KP"
        ],
        "summary": "Calculate KP Transit Events",
        "description": "Calculate KP transit events within specified window.\n\nReturns significant transits affecting KP significators\nwith applying/separating aspects and timing analysis.",
        "operationId": "calculate_transit_events_api_v1_kp_transit_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransitEventsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ref/ayanamshas": {
      "get": {
        "tags": [
          "Reference"
        ],
        "summary": "List Available Ayanamshas",
        "description": "Get list of supported Ayanamsha systems.\n\nReturns available ayanamsha calculations with descriptions\nand supported calculation types.",
        "operationId": "get_ayanamshas_api_v1_ref_ayanamshas_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ref/varga-types": {
      "get": {
        "tags": [
          "Reference"
        ],
        "summary": "List Available Varga Types",
        "description": "Get list of supported Varga (divisional chart) types.\n\nReturns standard Varga divisions with descriptions and usage guidance.",
        "operationId": "get_varga_types_api_v1_ref_varga_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ref/aspect-modes": {
      "get": {
        "tags": [
          "Reference"
        ],
        "summary": "List Available Aspect Modes",
        "description": "Get list of supported aspect calculation modes.\n\nReturns available aspect systems with orbs and supported calculations.",
        "operationId": "get_aspect_modes_api_v1_ref_aspect_modes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/atlas/resolve": {
      "post": {
        "tags": [
          "Atlas"
        ],
        "summary": "Resolve Location",
        "description": "Resolve location query to coordinates and timezone.\n\nSearches cities, regions, and landmarks to provide accurate\ncoordinates and IANA timezone identifiers for Vedic calculations.",
        "operationId": "resolve_location_api_v1_atlas_resolve_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeocodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/atlas/cities/{query}": {
      "get": {
        "tags": [
          "Atlas"
        ],
        "summary": "Search Cities",
        "description": "Search for cities matching query string.\n\nFast city lookup for autocomplete and selection interfaces.\nReturns cities with coordinates and timezone information.",
        "operationId": "search_cities_api_v1_atlas_cities__query__get",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/stream-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Issue Streaming Token",
        "description": "Issue one-time streaming token for SSE/WebSocket authentication.\n\nCreates JWT token with:\n- Topic-scoped access (only specified topic allowed)\n- Short TTL (\u2264 300 seconds, default 180)\n- Single-use enforcement via jti\n- Proper audience claim for stream validation",
        "operationId": "issue_stream_token_api_v1_auth_stream_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/validate": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Validate Token",
        "description": "Validate current authentication token.\n\nReturns token information and validity status.\nUseful for client token health checks.",
        "operationId": "validate_token_api_v1_auth_validate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/stream": {
      "get": {
        "tags": [
          "Streaming"
        ],
        "summary": "Server-Sent Events Stream",
        "description": "Subscribe to Server-Sent Events stream for specified topic.\n\nRequires one-time streaming token issued via /api/v1/auth/stream-token.\nToken must be topic-scoped and will be consumed on first use.",
        "operationId": "stream_events_api_v1_stream_get",
        "parameters": [
          {
            "name": "topic",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Topic to subscribe to",
              "title": "Topic"
            },
            "description": "Topic to subscribe to"
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "One-time streaming token",
              "title": "Token"
            },
            "description": "One-time streaming token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stream/topics": {
      "get": {
        "tags": [
          "Streaming"
        ],
        "summary": "List Available Topics",
        "description": "Get list of available streaming topics.\n\nReturns discoverable topics with descriptions and access requirements.",
        "operationId": "list_stream_topics_api_v1_stream_topics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/houses": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_houses_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_houses_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_houses_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_houses_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_houses_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/houses": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_houses_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_houses_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "houses"
        ],
        "summary": "Compute Houses Endpoint",
        "operationId": "compute_houses_endpoint_api_v1_houses_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_houses_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_houses_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/kp/rp": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_rp_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_rp_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_rp_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_rp_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_rp_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/rp/compute": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_kp_rp_compute_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_kp_rp_compute_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "kp-ruling-planets"
        ],
        "summary": "Compute Ruling Planets",
        "description": "Compute KP Ruling Planets for a given moment.\n\nCalculates the planetary rulers at any moment based on:\n- Day lord (weekday ruler)\n- Ascendant sign lord, nakshatra lord, sub lord\n- Moon sign lord, nakshatra lord, sub lord\n- Fortification bonuses for exalted/own sign planets\n\nReturns ranked list with stable ordering and total strength score.",
        "operationId": "compute_ruling_planets_api_v1_kp_rp_compute_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__kp_ruling_planets__RulingPlanetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api__routers__kp_ruling_planets__RulingPlanetsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_kp_rp_compute_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_kp_rp_compute_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/kp/horary": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/kp/horary/calculate": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_calculate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_calculate_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_calculate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_calculate_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_horary_calculate_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/horary/calculate": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_kp_horary_calculate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_kp_horary_calculate_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "kp-horary"
        ],
        "summary": "Calculate Horary",
        "description": "Calculate KP Horary number (1-249) for a given timestamp.\n\nSupports three calculation modes:\n- unix_mod: Direct modulo of Unix timestamp\n- daily_mod: Seconds since local midnight\n- sunrise_mod: Seconds since sunrise (traditional KP method)\n\nReturns horary number with planetary ruler and Moon boost factor.",
        "operationId": "calculate_horary_api_v1_kp_horary_calculate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__kp_horary__HoraryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HoraryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_kp_horary_calculate_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_kp_horary_calculate_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/dasha": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_dasha_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_dasha_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_dasha_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_dasha_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_dasha_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/dasha": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_dasha_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_dasha_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dasha"
        ],
        "summary": "Calculate Dasha",
        "description": "Calculate current Vimshottari Dasha periods.\n\nReturns active dasha chain at specified levels:\n- Level 1: Mahadasha only\n- Level 2: Mahadasha + Antardasha\n- Level 3: + Pratyantardasha\n- Level 4: + Sookshma\n- Level 5: + Prana",
        "operationId": "calculate_dasha_api_v1_dasha_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Calculate Dasha Api V1 Dasha Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_dasha_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_dasha_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/kp/nl_chain": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_nl_chain_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_nl_chain_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_nl_chain_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_nl_chain_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_nl_chain_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/kp/moon_chain": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_moon_chain_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_moon_chain_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_moon_chain_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_moon_chain_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_kp_moon_chain_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/features": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_features_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_features_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_features_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_features_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_features_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/location/features": {
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_location_features_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_location_features_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_location_features_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "location"
        ],
        "summary": "Post Location Features",
        "description": "POST endpoint for location features (explicit coordinates list).",
        "operationId": "post_location_features_api_v1_location_features_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeaturesPostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Post Location Features Api V1 Location Features Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "location"
        ],
        "summary": "Get Location Features",
        "description": "GET endpoint for location features (single lat/lon or server-mapped cities).",
        "operationId": "get_location_features_api_v1_location_features_get",
        "parameters": [
          {
            "name": "timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ISO8601 timestamp (UTC)",
              "title": "Timestamp"
            },
            "description": "ISO8601 timestamp (UTC)"
          },
          {
            "name": "cities",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "CSV of city IDs (legacy, server-mapped)",
              "title": "Cities"
            },
            "description": "CSV of city IDs (legacy, server-mapped)"
          },
          {
            "name": "city_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Free-text city query resolved via atlas",
              "title": "City Query"
            },
            "description": "Free-text city query resolved via atlas"
          },
          {
            "name": "city_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Exact atlas city id (country::name::admin1)",
              "title": "City Id"
            },
            "description": "Exact atlas city id (country::name::admin1)"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Country filter for city_query",
              "title": "Country"
            },
            "description": "Country filter for city_query"
          },
          {
            "name": "admin1",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Admin1/State filter for city_query",
              "title": "Admin1"
            },
            "description": "Admin1/State filter for city_query"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Max matches for city_query",
              "default": 1,
              "title": "Limit"
            },
            "description": "Max matches for city_query"
          },
          {
            "name": "latitude",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Latitude"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Longitude"
            }
          },
          {
            "name": "elevation",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Elevation"
            }
          },
          {
            "name": "house_system",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "KP",
                "PLACIDUS",
                "BHAVA"
              ],
              "type": "string",
              "default": "KP",
              "title": "House System"
            }
          },
          {
            "name": "topocentric",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Topocentric"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Location Features Api V1 Location Features Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/atlas": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_atlas_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_atlas_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_atlas_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_atlas_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_atlas_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/stream": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_stream_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_stream_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_stream_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_stream_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_stream_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/ws": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_ws_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_ws_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_ws_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_ws_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_ws_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/nodes": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_nodes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_nodes_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_nodes_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_nodes_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_nodes_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_nodes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_nodes_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_nodes_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_nodes_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_nodes_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/eclipse": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_eclipse_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_eclipse_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_eclipse_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_eclipse_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_eclipse_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/eclipse": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_eclipse_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_eclipse_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_eclipse_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_eclipse_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_eclipse_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/varga": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_varga_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_varga_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_varga_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_varga_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_varga_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/varga": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_varga_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_varga_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_varga_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_varga_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_varga_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/micro": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_micro_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_micro_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_micro_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_micro_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_micro_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/micro": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_micro_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_micro_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_micro_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_micro_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_micro_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/strategy": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_strategy_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_strategy_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_strategy_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_strategy_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_strategy_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/strategy": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_strategy_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_strategy_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_strategy_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_strategy_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_strategy_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/tara": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_tara_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_tara_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_tara_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_tara_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_tara_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/tara": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_tara_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_tara_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_tara_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_tara_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_tara_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/transit-events": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_transit_events_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_transit_events_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_transit_events_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_transit_events_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_transit_events_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/transit-events": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_transit_events_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_transit_events_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_transit_events_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_transit_events_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_transit_events_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/panchanga": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_panchanga_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_panchanga_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_panchanga_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_panchanga_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_panchanga_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/panchanga": {
      "get": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_panchanga_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_panchanga_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_panchanga_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_panchanga_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Legacy Handler",
        "description": "Handle legacy route with deprecation.",
        "operationId": "legacy_handler_api_v1_panchanga_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/health/live": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Liveness Check",
        "description": "Kubernetes liveness probe endpoint.\n\nReturns 200 OK if the application process is alive and responsive.\nThis should only fail if the process is completely dead.",
        "operationId": "liveness_check_api_v1_health_live_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/up": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Up",
        "description": "Ultra\u2011simple plaintext liveness for external monitors.\n\nAlways returns HTTP 200 with body \"ok\" when the process is responsive.",
        "operationId": "health_up_api_v1_health_up_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/ready": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Readiness Check",
        "description": "Kubernetes readiness probe endpoint.\n\nReturns 200 OK if all critical dependencies are functional.\nReturns 503 Service Unavailable if any critical systems are failing.\n\nThis endpoint validates:\n- KP calculation engine functionality\n- Cache storage accessibility\n- Authentication system configuration\n- System adapter registry",
        "operationId": "readiness_check_api_v1_health_ready_get",
        "responses": {
          "200": {
            "description": "Service is ready",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadinessResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service is not ready"
          }
        }
      }
    },
    "/api/v1/health/metrics": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Metrics Endpoint",
        "description": "Get current metrics snapshot for monitoring.\n\nReturns internal metrics and performance indicators.",
        "operationId": "metrics_endpoint_api_v1_health_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/version": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Version Info",
        "description": "Get version and environment information.\n\nUseful for deployment verification and debugging.",
        "operationId": "version_info_api_v1_health_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/startup": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Startup Check",
        "description": "Comprehensive startup health check.\n\nThis endpoint runs detailed validation of all system components\nand should be called after deployment to verify everything is working.\nMore comprehensive than /ready endpoint.",
        "operationId": "startup_check_api_v1_health_startup_get",
        "responses": {
          "200": {
            "description": "Startup checks passed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartupResponse"
                }
              }
            }
          },
          "503": {
            "description": "Startup checks failed"
          }
        }
      }
    },
    "/api/v1/signals/intraday": {
      "post": {
        "tags": [
          "signals"
        ],
        "summary": "Get Intraday Signals",
        "description": "Get intraday KP lord signals for a given date\n\nReturns time slices with:\n- NL/SL/SL2 lords for each interval\n- AMD phase detection relative to changes\n- Nearest change references\n- Trading session information",
        "operationId": "get_intraday_signals_api_v1_signals_intraday_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntradayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IntradaySlice"
                  },
                  "type": "array",
                  "title": "Response Get Intraday Signals Api V1 Signals Intraday Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signals/health": {
      "get": {
        "tags": [
          "enhanced-signals"
        ],
        "summary": "Enhanced Signals Health",
        "description": "Health check for enhanced signals service.\n\nReturns service status and key metrics without authentication.",
        "operationId": "enhanced_signals_health_api_v1_signals_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Enhanced Signals Health Api V1 Signals Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signals/intraday-enhanced": {
      "post": {
        "tags": [
          "enhanced-signals"
        ],
        "summary": "Get Enhanced Intraday Signals",
        "description": "Enhanced KP timing signals with multi-timeframe analysis and confluence detection.\n\nFeatures:\n- Multi-timeframe analysis across 1m, 5m, 15m, 1h, 4h, 1d intervals\n- Redis-backed caching for sub-millisecond retrieval\n- Confluence detection across multiple planetary transits\n- Performance metrics and monitoring\n\nPerformance targets:\n- Cache hit: <10ms P95\n- Cache miss: <150ms P95\n- Redis failover: <300ms P95",
        "operationId": "get_enhanced_intraday_signals_api_v1_signals_intraday_enhanced_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnhancedSignalsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnhancedSignalsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signals/stream/enhanced": {
      "get": {
        "tags": [
          "enhanced-signals"
        ],
        "summary": "Stream Enhanced Signals",
        "description": "Real-time streaming of enhanced KP timing signals via Server-Sent Events.\n\nStream topics:\n- Enhanced signals as they are detected\n- Confluence alerts when multiple signals align\n- Performance and health updates\n\nBrowser compatible with automatic reconnection support.",
        "operationId": "stream_enhanced_signals_api_v1_signals_stream_enhanced_get",
        "parameters": [
          {
            "name": "timeframes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma-separated timeframes",
              "default": "1m,5m",
              "title": "Timeframes"
            },
            "description": "Comma-separated timeframes"
          },
          {
            "name": "planet_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comma-separated planet IDs",
              "default": "2",
              "title": "Planet Ids"
            },
            "description": "Comma-separated planet IDs"
          },
          {
            "name": "confluence_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "minimum": 2,
              "default": 3,
              "title": "Confluence Threshold"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signals/performance": {
      "get": {
        "tags": [
          "enhanced-signals"
        ],
        "summary": "Get Performance Stats",
        "description": "Get performance statistics for the enhanced signals service.\n\nIncludes:\n- Request/response metrics\n- Cache performance\n- Redis availability\n- Service health indicators",
        "operationId": "get_performance_stats_api_v1_signals_performance_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signals/invalidate-cache": {
      "post": {
        "tags": [
          "enhanced-signals"
        ],
        "summary": "Invalidate Signal Cache",
        "description": "Manually invalidate signal cache for a specific date/planet.\n\nUseful for:\n- Forcing recalculation after astronomical data updates\n- Cache corruption recovery\n- Testing and development",
        "operationId": "invalidate_signal_cache_api_v1_signals_invalidate_cache_post",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Date to invalidate (YYYY-MM-DD)",
              "title": "Date"
            },
            "description": "Date to invalidate (YYYY-MM-DD)"
          },
          {
            "name": "planet_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Specific planet ID to invalidate",
              "title": "Planet Id"
            },
            "description": "Specific planet ID to invalidate"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Invalidate Signal Cache Api V1 Signals Invalidate Cache Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dasha/changes": {
      "post": {
        "tags": [
          "dasha"
        ],
        "summary": "Get Dasha Changes",
        "description": "Get all dasha transitions occurring on a specific date.\n\nReturns list of change events with:\n- level: Which dasha level changed\n- type: 'start' or 'end'\n- planet: Planet involved\n- timestamp: Exact time of change",
        "operationId": "get_dasha_changes_api_v1_dasha_changes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashaChangesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Dasha Changes Api V1 Dasha Changes Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dasha/cycle": {
      "post": {
        "tags": [
          "dasha"
        ],
        "summary": "Get Full Cycle",
        "description": "Get full 120-year Vimshottari cycle with nested periods.\n\nReturns hierarchical structure with all dasha periods.\nWarning: Response can be large with higher level values.",
        "operationId": "get_full_cycle_api_v1_dasha_cycle_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashaCycleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Full Cycle Api V1 Dasha Cycle Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dasha/balance": {
      "post": {
        "tags": [
          "dasha"
        ],
        "summary": "Get Birth Balance",
        "description": "Get birth balance dasha information.\n\nReturns:\n- Birth nakshatra and lord\n- Elapsed and remaining days in birth dasha\n- Elapsed and remaining portions",
        "operationId": "get_birth_balance_api_v1_dasha_balance_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_birth_balance_api_v1_dasha_balance_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Birth Balance Api V1 Dasha Balance Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dasha/systems": {
      "get": {
        "tags": [
          "dasha"
        ],
        "summary": "List Dasha Systems",
        "description": "List available dasha systems and their capabilities.",
        "operationId": "list_dasha_systems_api_v1_dasha_systems_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response List Dasha Systems Api V1 Dasha Systems Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/events": {
      "post": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Node Events",
        "description": "Get node events (stationary, direction changes) in a time range.\n\nReturns list of events with:\n- type: Event type (stationary_start, stationary_end, direction_change, wobble_peak)\n- timestamp: Exact time of event\n- speed: Node speed at event time\n- Additional metadata based on event type",
        "operationId": "get_node_events_api_v1_nodes_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeEventsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Node Events Api V1 Nodes Events Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/now": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Current Node State",
        "description": "Get current node state (position, speed, direction, stationary flag).\n\nThis endpoint provides live calculation with minimal caching (5s TTL).",
        "operationId": "get_current_node_state_api_v1_nodes_now_get",
        "parameters": [
          {
            "name": "system",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Node system",
              "default": "KP_NODES",
              "title": "System"
            },
            "description": "Node system"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Timestamp (default: now)",
              "title": "Timestamp"
            },
            "description": "Timestamp (default: now)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeStateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/next-event": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Next Event",
        "description": "Find the next node event of a specific type.\n\nEvent types:\n- stationary_start: Node entering stationary phase\n- stationary_end: Node exiting stationary phase\n- direction_change: Node changing direction (retro/direct)\n- wobble_peak: Local speed extrema (if enabled)",
        "operationId": "get_next_event_api_v1_nodes_next_event_get",
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific event type to find",
              "title": "Event Type"
            },
            "description": "Specific event type to find"
          },
          {
            "name": "from_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start searching from (default: now)",
              "title": "From Time"
            },
            "description": "Start searching from (default: now)"
          },
          {
            "name": "max_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Maximum days to search",
              "default": 30,
              "title": "Max Days"
            },
            "description": "Maximum days to search"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Next Event Api V1 Nodes Next Event Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/statistics": {
      "post": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Node Statistics",
        "description": "Get statistical analysis of node behavior over a period.\n\nReturns:\n- Event counts by type\n- Speed statistics (min, max, average)\n- Configuration used",
        "operationId": "get_node_statistics_api_v1_nodes_statistics_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_node_statistics_api_v1_nodes_statistics_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Node Statistics Api V1 Nodes Statistics Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/config": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Node Configuration",
        "description": "Get current node detection configuration.\n\nShows thresholds, feature flags, and cache settings.",
        "operationId": "get_node_configuration_api_v1_nodes_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Node Configuration Api V1 Nodes Config Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/systems": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "List Node Systems",
        "description": "List available node systems and their capabilities.",
        "operationId": "list_node_systems_api_v1_nodes_systems_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response List Node Systems Api V1 Nodes Systems Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eclipse/events": {
      "post": {
        "tags": [
          "eclipse"
        ],
        "summary": "Search Eclipses",
        "description": "Find eclipses within a date range\n\nReturns solar and/or lunar eclipses between start and end dates.\nMaximum range is 5 years.",
        "operationId": "search_eclipses_api_v1_eclipse_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclipseSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclipseSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eclipse/visibility": {
      "post": {
        "tags": [
          "eclipse"
        ],
        "summary": "Check Visibility",
        "description": "Check local visibility of an eclipse\n\nDetermines if an eclipse is visible from a specific location\nand provides visibility details.",
        "operationId": "check_visibility_api_v1_eclipse_visibility_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisibilityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisibilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eclipse/path": {
      "post": {
        "tags": [
          "eclipse"
        ],
        "summary": "Get Eclipse Path",
        "description": "Get the path of a solar eclipse\n\nReturns the central line and limits of a solar eclipse.\nOnly applicable for total, annular, and hybrid eclipses.",
        "operationId": "get_eclipse_path_api_v1_eclipse_path_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PathRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PathResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eclipse/next": {
      "post": {
        "tags": [
          "eclipse"
        ],
        "summary": "Find Next Eclipse",
        "description": "Find the next eclipse after a given time\n\nSearches for the next eclipse of the specified type and classification.",
        "operationId": "find_next_eclipse_api_v1_eclipse_next_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NextEclipseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextEclipseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eclipse/config": {
      "get": {
        "tags": [
          "eclipse"
        ],
        "summary": "Get Eclipse Config",
        "description": "Get current eclipse configuration",
        "operationId": "get_eclipse_config_api_v1_eclipse_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/moon/profile": {
      "post": {
        "tags": [
          "moon"
        ],
        "summary": "Get Moon Profile",
        "description": "Get moon profile with Phase 7 indices\n\nReturns velocity index, latitude index, distance index,\nand overall strength assessment.",
        "operationId": "get_moon_profile_api_v1_moon_profile_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoonProfileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoonProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moon/events": {
      "post": {
        "tags": [
          "moon"
        ],
        "summary": "Find Moon Events",
        "description": "Find moon anomaly events in date range\n\nReturns perigee, apogee, and standstill events.",
        "operationId": "find_moon_events_api_v1_moon_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoonEventsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoonEventsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moon/panchanga": {
      "get": {
        "tags": [
          "moon"
        ],
        "summary": "Get Panchanga",
        "description": "Get panchanga elements for a specific time\n\nReturns tithi, nakshatra, yoga, karana, and paksha.",
        "operationId": "get_panchanga_api_v1_moon_panchanga_get",
        "parameters": [
          {
            "name": "timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Time for panchanga (UTC)",
              "title": "Timestamp"
            },
            "description": "Time for panchanga (UTC)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api__routers__moon__PanchangaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moon/strength": {
      "get": {
        "tags": [
          "moon"
        ],
        "summary": "Get Moon Strength",
        "description": "Get moon strength assessment\n\nReturns strength indices and anomaly flags.",
        "operationId": "get_moon_strength_api_v1_moon_strength_get",
        "parameters": [
          {
            "name": "timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Time to check (UTC)",
              "title": "Timestamp"
            },
            "description": "Time to check (UTC)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moon/config": {
      "get": {
        "tags": [
          "moon"
        ],
        "summary": "Get Moon Config",
        "description": "Get current moon configuration",
        "operationId": "get_moon_config_api_v1_moon_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/micro/day": {
      "post": {
        "tags": [
          "micro-timing"
        ],
        "summary": "Get volatility windows for a day",
        "description": "Generate volatility windows for a single day.\n\nReturns a timeline of micro-volatility windows with scores and factors.",
        "operationId": "micro_day_api_v1_micro_day_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__micro__DayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicroDayResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/micro/range": {
      "post": {
        "tags": [
          "micro-timing"
        ],
        "summary": "Get volatility windows for date range",
        "description": "Generate volatility windows for a date range.\n\nReturns merged timeline across multiple days.",
        "operationId": "micro_range_api_v1_micro_range_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicroRangeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/micro/next": {
      "get": {
        "tags": [
          "micro-timing"
        ],
        "summary": "Find next volatility window",
        "description": "Find the next upcoming volatility window meeting the threshold.\n\nSearches up to max_days_range (default 31) days ahead.",
        "operationId": "micro_next_api_v1_micro_next_get",
        "parameters": [
          {
            "name": "system",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "System identifier",
              "default": "KP_MICRO",
              "title": "System"
            },
            "description": "System identifier"
          },
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "low",
                "medium",
                "high"
              ],
              "type": "string",
              "description": "Minimum volatility strength",
              "default": "high",
              "title": "Threshold"
            },
            "description": "Minimum volatility strength"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicroNextResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/micro/instant": {
      "post": {
        "tags": [
          "micro-timing"
        ],
        "summary": "Get instantaneous volatility score",
        "description": "Calculate volatility score at a specific timestamp.\n\nReturns score, strength, and active contributing factors.",
        "operationId": "micro_instant_api_v1_micro_instant_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicroInstantResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/micro/config": {
      "get": {
        "tags": [
          "micro-timing"
        ],
        "summary": "Get micro-timing configuration",
        "description": "Get current micro-timing configuration and metadata.\n\nReturns weights, thresholds, window sizes, and feature flags.",
        "operationId": "micro_config_api_v1_micro_config_get",
        "parameters": [
          {
            "name": "system",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "KP_MICRO",
              "title": "System"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicroConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategy/day": {
      "post": {
        "tags": [
          "strategy"
        ],
        "summary": "Get daily confidence timeline",
        "description": "Generate minute-by-minute confidence timeline for a trading day.\n\nReturns confidence scores, direction hints, and applied rules for each minute.",
        "operationId": "strategy_day_api_v1_strategy_day_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__strategy__DayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrategyDayResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategy/window": {
      "post": {
        "tags": [
          "strategy"
        ],
        "summary": "Get window confidence aggregation",
        "description": "Get aggregated confidence statistics for a time window.\n\nUseful for analyzing specific market periods or sessions.",
        "operationId": "strategy_window_api_v1_strategy_window_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrategyWindowResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategy/config": {
      "get": {
        "tags": [
          "strategy"
        ],
        "summary": "Get strategy configuration",
        "description": "Get current strategy configuration including weights, rules, and thresholds.",
        "operationId": "strategy_config_api_v1_strategy_config_get",
        "parameters": [
          {
            "name": "system",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "KP_STRATEGY",
              "title": "System"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrategyConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategy/config/dryrun": {
      "post": {
        "tags": [
          "strategy"
        ],
        "summary": "Test configuration without persisting",
        "description": "Test a strategy configuration without persisting it.\n\nUseful for experimenting with different weights and rules.",
        "operationId": "strategy_config_dryrun_api_v1_strategy_config_dryrun_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigDryrunRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrategyDryRunResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategy/health": {
      "get": {
        "tags": [
          "strategy"
        ],
        "summary": "Check strategy system health",
        "description": "Check health of strategy system and dependencies.",
        "operationId": "strategy_health_api_v1_strategy_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StrategyHealthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/v1/advisory/snapshot": {
      "post": {
        "tags": [
          "advisory"
        ],
        "summary": "Get advisory snapshot at timestamp",
        "description": "Get all enabled advisory calculations for a specific moment.\n\nReturns advisory layers based on enabled feature flags.\nOnly modules with enabled flags will be included in the response.",
        "operationId": "get_advisory_snapshot_api_v1_advisory_snapshot_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisorySnapshotResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/advisory/range": {
      "post": {
        "tags": [
          "advisory"
        ],
        "summary": "Get advisory data for time range",
        "description": "Get advisory snapshots over a time range.\n\nSamples advisory data at regular intervals across the specified range.\nUseful for identifying patterns and timing windows.",
        "operationId": "get_advisory_range_api_v1_advisory_range_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisoryRangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisoryRangeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/advisory/features": {
      "get": {
        "tags": [
          "advisory"
        ],
        "summary": "Get feature flag status",
        "description": "Get current status of advisory feature flags.\n\nShows which advisory modules are enabled, available, and their configuration.",
        "operationId": "get_feature_status_api_v1_advisory_features_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/advisory/ruling-planets": {
      "post": {
        "tags": [
          "advisory"
        ],
        "summary": "Calculate KP Ruling Planets",
        "description": "Calculate KP Ruling Planets for a given moment.\n\nReturns the ruling planets based on:\n- Ascendant sign, star, and sub lords\n- Moon sign, star, and sub lords\n- Day lord (Vara)\n- Hora lord (planetary hour)\n\nRequires ENABLE_KP_RULING_PLANETS feature flag.",
        "operationId": "calculate_ruling_planets_api_v1_advisory_ruling_planets_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__routers__advisory__RulingPlanetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api__models__responses__RulingPlanetsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/advisory/shadbala": {
      "post": {
        "tags": [
          "advisory"
        ],
        "summary": "Calculate Shadbala strength",
        "description": "Calculate six-fold planetary strength (Shadbala).\n\nReturns strength components:\n- Sthana Bala (positional)\n- Dig Bala (directional)\n- Kala Bala (temporal)\n- Chesta Bala (motional)\n- Naisargika Bala (natural)\n- Drik Bala (aspectual)\n\nRequires ENABLE_SHADBALA feature flag.",
        "operationId": "calculate_shadbala_api_v1_advisory_shadbala_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvisoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShadbalaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/advisory/health": {
      "get": {
        "tags": [
          "advisory"
        ],
        "summary": "Advisory service health check",
        "description": "Check advisory service health and configuration.",
        "operationId": "health_check_api_v1_advisory_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisoryHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tara/personal": {
      "post": {
        "tags": [
          "Tara Bala"
        ],
        "summary": "Get Personal Tara",
        "description": "Calculate personal Tara Bala based on birth Moon.\n\nReturns the 9-fold Tara position and quality assessment\nfor timing decisions based on nakshatra relationships.",
        "operationId": "get_personal_tara_api_v1_tara_personal_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaraAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Personal Tara Api V1 Tara Personal Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tara/muhurta": {
      "post": {
        "tags": [
          "Tara Bala"
        ],
        "summary": "Get Muhurta Analysis",
        "description": "Evaluate muhurta quality for multiple participants.\n\nUseful for selecting event timing that works for\nmultiple people based on their birth Moons.",
        "operationId": "get_muhurta_analysis_api_v1_tara_muhurta_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MuhurtaTaraRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Muhurta Analysis Api V1 Tara Muhurta Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tara/day-scan": {
      "post": {
        "tags": [
          "Tara Bala"
        ],
        "summary": "Scan Tara For Day",
        "description": "Scan Tara quality throughout a day.\n\nReturns hourly or summary assessment of Tara positions\nto identify favorable and unfavorable windows.",
        "operationId": "scan_tara_for_day_api_v1_tara_day_scan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaraDayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Scan Tara For Day Api V1 Tara Day Scan Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tara/universal": {
      "post": {
        "tags": [
          "Tara Bala"
        ],
        "summary": "Get Universal Tara",
        "description": "Calculate universal Tara based on current Moon nakshatra.\n\nProvides general timing quality without personal birth data.\nUses day's starting nakshatra as reference.",
        "operationId": "get_universal_tara_api_v1_tara_universal_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniversalTaraRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Universal Tara Api V1 Tara Universal Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tara/types": {
      "get": {
        "tags": [
          "Tara Bala"
        ],
        "summary": "Get Tara Types",
        "description": "Get information about all 9 Tara types.\n\nReturns descriptions and quality indicators for each Tara.",
        "operationId": "get_tara_types_api_v1_tara_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Tara Types Api V1 Tara Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tara/help": {
      "get": {
        "tags": [
          "Tara Bala"
        ],
        "summary": "Get Tara Help",
        "description": "Get help information about Tara Bala system.\n\nExplains the 9-fold cycle and how to use it for timing.",
        "operationId": "get_tara_help_api_v1_tara_help_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Tara Help Api V1 Tara Help Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fortuna/calculate": {
      "post": {
        "tags": [
          "Fortuna Points"
        ],
        "summary": "Calculate Fortuna Points",
        "description": "Calculate Arabic Parts/Fortuna Points.\n\nReturns positions and interpretations for requested points.\nIncludes Part of Fortune, Spirit, Love, Marriage, Career, etc.",
        "operationId": "calculate_fortuna_points_api_v1_fortuna_calculate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FortunaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Calculate Fortuna Points Api V1 Fortuna Calculate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fortuna/part-of-fortune": {
      "post": {
        "tags": [
          "Fortuna Points"
        ],
        "summary": "Calculate Part Of Fortune",
        "description": "Calculate Part of Fortune with detailed analysis.\n\nThe most important Arabic Part, representing worldly success\nand the integration of solar and lunar energies.",
        "operationId": "calculate_part_of_fortune_api_v1_fortuna_part_of_fortune_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartOfFortuneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Calculate Part Of Fortune Api V1 Fortuna Part Of Fortune Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fortuna/movement": {
      "post": {
        "tags": [
          "Fortuna Points"
        ],
        "summary": "Track Fortuna Movement",
        "description": "Track movement of fortuna points throughout a day.\n\nShows how Arabic Parts move through houses and signs,\nuseful for intraday timing.",
        "operationId": "track_fortuna_movement_api_v1_fortuna_movement_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FortunaMovementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Track Fortuna Movement Api V1 Fortuna Movement Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fortuna/range": {
      "post": {
        "tags": [
          "Fortuna Points"
        ],
        "summary": "Get Fortuna Range",
        "description": "Get fortuna point positions over a time range.\n\nUseful for identifying when a point enters specific houses or signs.",
        "operationId": "get_fortuna_range_api_v1_fortuna_range_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FortunaRangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Fortuna Range Api V1 Fortuna Range Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fortuna/points": {
      "get": {
        "tags": [
          "Fortuna Points"
        ],
        "summary": "List Available Points",
        "description": "List all available Fortuna Points/Arabic Parts.\n\nReturns names, formulas, and interpretations.",
        "operationId": "list_available_points_api_v1_fortuna_points_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List Available Points Api V1 Fortuna Points Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fortuna/help": {
      "get": {
        "tags": [
          "Fortuna Points"
        ],
        "summary": "Get Fortuna Help",
        "description": "Get help information about Fortuna Points system.\n\nExplains Arabic Parts and their usage in astrology.",
        "operationId": "get_fortuna_help_api_v1_fortuna_help_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Fortuna Help Api V1 Fortuna Help Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transit-events/detect": {
      "post": {
        "tags": [
          "Transit Events"
        ],
        "summary": "Detect Events",
        "description": "Detect transit events at given timestamp.\n\nMain endpoint for transit event detection using the\nMoon-centric KP chain triggering system.",
        "operationId": "detect_events_api_v1_transit_events_detect_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetectEventsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transit-events/moon-triggers": {
      "post": {
        "tags": [
          "Transit Events"
        ],
        "summary": "Get Moon Triggers",
        "description": "Get Moon triggers for specific planets.\n\nCheck how Moon's current KP chain triggers specific planets\nthrough gates and resonances.",
        "operationId": "get_moon_triggers_api_v1_transit_events_moon_triggers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoonTriggersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transit-events/gates": {
      "get": {
        "tags": [
          "Transit Events"
        ],
        "summary": "Get Gates",
        "description": "Get current gate values for all planets.\n\nReturns the Moon\u2192Planet connectivity strength for inspection.",
        "operationId": "get_gates_api_v1_transit_events_gates_get",
        "parameters": [
          {
            "name": "ts",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "UTC timestamp",
              "title": "Ts"
            },
            "description": "UTC timestamp"
          },
          {
            "name": "show_all",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show all planets",
              "default": false,
              "title": "Show All"
            },
            "description": "Show all planets"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitGatesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transit-events/promise-check": {
      "post": {
        "tags": [
          "Transit Events"
        ],
        "summary": "Check Promise",
        "description": "Check birth chart promise for themes.\n\nValidates whether planets promise specific themes based on\ntheir natal positions and significator relationships.",
        "operationId": "check_promise_api_v1_transit_events_promise_check_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromiseCheckRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitPromiseCheckResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transit-events/config": {
      "get": {
        "tags": [
          "Transit Events"
        ],
        "summary": "Get Config",
        "description": "Get current transit event configuration and feature flags.",
        "operationId": "get_config_api_v1_transit_events_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transit-events/health": {
      "get": {
        "tags": [
          "Transit Events"
        ],
        "summary": "Health Check",
        "description": "Health check for transit event system.",
        "operationId": "health_check_api_v1_transit_events_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ats/transit": {
      "post": {
        "tags": [
          "ATS"
        ],
        "summary": "Calculate Transit",
        "description": "Calculate ATS transit scores for given timestamp\n\nReturns normalized scores (0-100) for target planets based on\naspect-transfer energy from all planets.\n\nPerformance: <10ms cached, <50ms cold",
        "operationId": "calculate_transit_api_v1_ats_transit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ATSTransitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ATSResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ats/batch": {
      "post": {
        "tags": [
          "ATS"
        ],
        "summary": "Calculate Batch",
        "description": "Calculate ATS scores for a time range\n\nReturns list of score calculations at specified intervals.\nMaximum range: 24 hours.",
        "operationId": "calculate_batch_api_v1_ats_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ATSBatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ATSBatchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ats/config": {
      "get": {
        "tags": [
          "ATS"
        ],
        "summary": "Get Config",
        "description": "Get current ATS configuration\n\nReturns context file, default targets, and other metadata.",
        "operationId": "get_config_api_v1_ats_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ATSConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ats/validate": {
      "get": {
        "tags": [
          "ATS"
        ],
        "summary": "Validate Scores",
        "description": "Validate ATS scores for correctness\n\nChecks score ranges, computation time, and other constraints.",
        "operationId": "validate_scores_api_v1_ats_validate_get",
        "parameters": [
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "UTC timestamp to validate (defaults to current time)",
              "title": "Timestamp"
            },
            "description": "UTC timestamp to validate (defaults to current time)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ATSValidationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ats/status": {
      "get": {
        "tags": [
          "ATS"
        ],
        "summary": "Get Status",
        "description": "Get ATS system status\n\nReturns health check and basic system information.",
        "operationId": "get_status_api_v1_ats_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ATSStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ats/health": {
      "get": {
        "tags": [
          "ATS"
        ],
        "summary": "Health Check",
        "description": "Check ATS service health (deprecated - use /status)",
        "operationId": "health_check_api_v1_ats_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/ats/contexts": {
      "get": {
        "tags": [
          "ATS"
        ],
        "summary": "List Contexts",
        "description": "List available ATS contexts",
        "operationId": "list_contexts_api_v1_ats_contexts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ATSContextsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/panchanga/calculate": {
      "post": {
        "tags": [
          "panchanga"
        ],
        "summary": "Calculate Panchanga",
        "description": "Calculate Panchanga using SystemAdapter registry pattern\n\nThis demonstrates the PM-requested approach:\n- Uses registry.get(\"panchanga\") instead of direct imports\n- Logs include adapter_id + adapter_version\n- No direct imports from modules/panchanga/*",
        "operationId": "calculate_panchanga_api_v1_panchanga_calculate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PanchangaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api__routers__panchanga__PanchangaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/panchanga/health": {
      "get": {
        "tags": [
          "panchanga"
        ],
        "summary": "Panchanga Health",
        "description": "Check Panchanga adapter health via registry",
        "operationId": "panchanga_health_api_v1_panchanga_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PanchangaHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/panchanga/schema": {
      "get": {
        "tags": [
          "panchanga"
        ],
        "summary": "Panchanga Schema",
        "description": "Get Panchanga adapter input/output schema",
        "operationId": "panchanga_schema_api_v1_panchanga_schema_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PanchangaSchemaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/panchanga/explain": {
      "post": {
        "tags": [
          "panchanga"
        ],
        "summary": "Explain Panchanga",
        "description": "Get explanation of Panchanga results via registry",
        "operationId": "explain_panchanga_api_v1_panchanga_explain_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PanchangaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PanchangaExplanationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/horary/health": {
      "get": {
        "tags": [
          "kp-horary"
        ],
        "summary": "Health Check",
        "description": "Health check for Horary service",
        "operationId": "health_check_api_v1_kp_horary_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/rp/weekday-info/{weekday_idx}": {
      "get": {
        "tags": [
          "kp-ruling-planets"
        ],
        "summary": "Get Weekday Info",
        "description": "Get information about a specific weekday.\n\nArgs:\n    weekday_idx: 0=Monday, 1=Tuesday, ..., 6=Sunday",
        "operationId": "get_weekday_info_api_v1_kp_rp_weekday_info__weekday_idx__get",
        "parameters": [
          {
            "name": "weekday_idx",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Weekday Idx"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/rp/schema": {
      "get": {
        "tags": [
          "kp-ruling-planets"
        ],
        "summary": "Get Schema",
        "description": "Get API schema for Ruling Planets endpoints",
        "operationId": "get_schema_api_v1_kp_rp_schema_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/rp/explain": {
      "get": {
        "tags": [
          "kp-ruling-planets"
        ],
        "summary": "Get Explanation",
        "description": "Get explanation of Ruling Planets calculation logic",
        "operationId": "get_explanation_api_v1_kp_rp_explain_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/kp/rp/health": {
      "get": {
        "tags": [
          "kp-ruling-planets"
        ],
        "summary": "Health Check",
        "description": "Health check for Ruling Planets service",
        "operationId": "health_check_api_v1_kp_rp_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/stream/{topic}": {
      "get": {
        "tags": [
          "stream"
        ],
        "summary": "Stream Topic",
        "description": "SSE endpoint for real-time topic streaming.\n\nCRITICAL: Uses query parameter authentication because EventSource API\ncannot send Authorization headers in browsers.\n\nUsage: GET /stream/kp.v1.moon.chain?token=jwt_token_here",
        "operationId": "stream_topic_stream__topic__get",
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stream/_stats": {
      "get": {
        "tags": [
          "stream"
        ],
        "summary": "Stream Stats",
        "description": "Get streaming statistics for debugging and monitoring.\n\nCRITICAL: This is a plain JSON endpoint, NOT a stream.\nRequires authentication but accessible to all tenants.",
        "operationId": "stream_stats_stream__stats_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Stream Stats Stream  Stats Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stream/_dev_publish/{topic}": {
      "post": {
        "tags": [
          "stream"
        ],
        "summary": "Dev Publish",
        "description": "DEV ONLY: Publish a test message to a topic.\n\nCRITICAL: This endpoint is gated by STREAM_DEV_PUBLISH_TOKEN and\ndisabled in production via STREAM_DEV_PUBLISH_ENABLED=false.\n\nUsage: POST /_dev_publish/kp.v1.moon.chain?token=dev_secret\nBody: {\"degree\": 123.45, \"speed\": 13.06, ...}",
        "operationId": "dev_publish_stream__dev_publish__topic__post",
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Dev Publish Stream  Dev Publish  Topic  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stream/publish/{topic}": {
      "post": {
        "tags": [
          "stream"
        ],
        "summary": "Jwt Publish",
        "description": "JWT-protected publish endpoint for production streaming.\n\nCRITICAL: Requires 'stream:publish' scope and topic ACL validation.\nThis replaces dev-publish for production use with proper auth.\n\nUsage: POST /stream/publish/kp.v1.moon.chain?token=jwt_with_publish_scope\nBody: {\"degree\": 123.45, \"speed\": 13.06, ...}",
        "operationId": "jwt_publish_stream_publish__topic__post",
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Jwt Publish Stream Publish  Topic  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stream/_health": {
      "get": {
        "tags": [
          "stream"
        ],
        "summary": "Stream Health",
        "description": "Health check endpoint for streaming service.\n\nNo authentication required for health checks.",
        "operationId": "stream_health_stream__health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Stream Health Stream  Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/ws/health": {
      "get": {
        "tags": [
          "websocket"
        ],
        "summary": "Websocket Health",
        "description": "WebSocket service health check.\n\nNo authentication required for health checks.",
        "operationId": "websocket_health_ws_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebSocketHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ws/stats": {
      "get": {
        "tags": [
          "websocket"
        ],
        "summary": "Websocket Stats",
        "description": "Detailed WebSocket statistics for monitoring.\n\nNo authentication required for monitoring endpoints.",
        "operationId": "websocket_stats_ws_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebSocketStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/atlas/search": {
      "get": {
        "tags": [
          "atlas"
        ],
        "summary": "Search Cities",
        "operationId": "search_cities_api_v1_atlas_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "City name query",
              "title": "Q"
            },
            "description": "City name query"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Country filter (exact match)",
              "title": "Country"
            },
            "description": "Country filter (exact match)"
          },
          {
            "name": "admin1",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Admin1/State filter (exact match)",
              "title": "Admin1"
            },
            "description": "Admin1/State filter (exact match)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AtlasResult"
                  },
                  "title": "Response Search Cities Api V1 Atlas Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/atlas/{city_id}": {
      "get": {
        "tags": [
          "atlas"
        ],
        "summary": "Get City",
        "operationId": "get_city_api_v1_atlas__city_id__get",
        "parameters": [
          {
            "name": "city_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "City Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtlasResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Prometheus metrics endpoint",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/version": {
      "get": {
        "summary": "Version",
        "description": "Expose build metadata (git SHA) and symbol policy",
        "operationId": "version_api_v1_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/systems": {
      "get": {
        "summary": "Get Systems",
        "description": "Get registered calculation systems with capabilities",
        "operationId": "get_systems_api_v1_systems_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ATSBatchRequest": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time",
            "description": "Start of time range (UTC)"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time",
            "description": "End of time range (UTC)"
          },
          "interval_minutes": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 1.0,
            "title": "Interval Minutes",
            "description": "Interval between calculations in minutes",
            "default": 1
          },
          "targets": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Targets",
            "description": "List of target planet IDs (1-9)"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "ATSBatchRequest",
        "description": "Request model for batch ATS calculations"
      },
      "ATSBatchResponse": {
        "properties": {
          "results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Results",
            "description": "ATS calculation results"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "description": "Number of results"
          }
        },
        "type": "object",
        "required": [
          "results",
          "count"
        ],
        "title": "ATSBatchResponse",
        "description": "ATS batch calculation response."
      },
      "ATSConfigResponse": {
        "properties": {
          "context": {
            "type": "object",
            "title": "Context",
            "description": "ATS context configuration"
          }
        },
        "type": "object",
        "required": [
          "context"
        ],
        "title": "ATSConfigResponse",
        "description": "ATS configuration response."
      },
      "ATSContextsResponse": {
        "properties": {
          "contexts": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Contexts",
            "description": "Available ATS contexts"
          },
          "current": {
            "type": "string",
            "title": "Current",
            "description": "Current context file"
          }
        },
        "type": "object",
        "required": [
          "contexts",
          "current"
        ],
        "title": "ATSContextsResponse",
        "description": "ATS contexts list response."
      },
      "ATSResponse": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "scores_norm": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Scores Norm",
            "description": "Normalized scores (0-100 scale) by planet ID"
          },
          "scores_raw": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Scores Raw",
            "description": "Raw scores before normalization"
          },
          "by_source": {
            "additionalProperties": {
              "additionalProperties": {
                "type": "number"
              },
              "type": "object"
            },
            "type": "object",
            "title": "By Source",
            "description": "Score breakdown by source planet"
          },
          "targets": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Targets",
            "description": "Target planet IDs used"
          },
          "context": {
            "type": "string",
            "title": "Context",
            "description": "Context configuration file used"
          },
          "compute_ms": {
            "type": "number",
            "title": "Compute Ms",
            "description": "Computation time in milliseconds"
          },
          "cache_hit": {
            "type": "boolean",
            "title": "Cache Hit",
            "description": "Whether result was from cache"
          },
          "deltas": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deltas",
            "description": "Score changes from previous minute"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "scores_norm",
          "scores_raw",
          "by_source",
          "targets",
          "context",
          "compute_ms",
          "cache_hit"
        ],
        "title": "ATSResponse",
        "description": "Standard ATS response model"
      },
      "ATSStatusResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "System status: healthy or unhealthy"
          },
          "adapter_version": {
            "type": "string",
            "title": "Adapter Version",
            "description": "Adapter version"
          },
          "context_file": {
            "type": "string",
            "title": "Context File",
            "description": "Context configuration file"
          },
          "cache_ttl": {
            "type": "integer",
            "title": "Cache Ttl",
            "description": "Cache TTL in seconds"
          },
          "test_calculation": {
            "type": "object",
            "title": "Test Calculation",
            "description": "Test calculation result"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if unhealthy"
          }
        },
        "type": "object",
        "required": [
          "status",
          "adapter_version",
          "context_file",
          "cache_ttl",
          "test_calculation"
        ],
        "title": "ATSStatusResponse",
        "description": "ATS system status response."
      },
      "ATSTransitRequest": {
        "properties": {
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp",
            "description": "UTC timestamp for calculation (defaults to current time)"
          },
          "targets": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Targets",
            "description": "List of target planet IDs (1-9). Defaults to [6, 5] (Venus, Mercury)"
          }
        },
        "type": "object",
        "title": "ATSTransitRequest",
        "description": "Request model for ATS transit calculation"
      },
      "ATSValidationResponse": {
        "properties": {
          "valid": {
            "type": "boolean",
            "title": "Valid",
            "description": "Validation result"
          },
          "scores": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Scores",
            "description": "Validated scores"
          },
          "computation_time_ms": {
            "type": "number",
            "title": "Computation Time Ms",
            "description": "Computation time in milliseconds"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Validation timestamp"
          }
        },
        "type": "object",
        "required": [
          "valid",
          "scores",
          "computation_time_ms",
          "timestamp"
        ],
        "title": "ATSValidationResponse",
        "description": "ATS validation response."
      },
      "AdvisoryHealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Health status"
          },
          "enabled_count": {
            "type": "integer",
            "title": "Enabled Count",
            "description": "Number of enabled features"
          },
          "available_count": {
            "type": "integer",
            "title": "Available Count",
            "description": "Number of available features"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Features",
            "description": "Enabled feature list"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if unhealthy"
          }
        },
        "type": "object",
        "required": [
          "status",
          "enabled_count",
          "available_count",
          "features"
        ],
        "title": "AdvisoryHealthResponse",
        "description": "Advisory service health response."
      },
      "AdvisoryRangeRequest": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time",
            "description": "Start of time range (UTC)"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time",
            "description": "End of time range (UTC)"
          },
          "interval_minutes": {
            "type": "integer",
            "maximum": 1440.0,
            "minimum": 1.0,
            "title": "Interval Minutes",
            "description": "Sampling interval in minutes",
            "default": 60
          },
          "latitude": {
            "type": "number",
            "title": "Latitude",
            "description": "Location latitude",
            "default": 40.7128
          },
          "longitude": {
            "type": "number",
            "title": "Longitude",
            "description": "Location longitude",
            "default": -74.006
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "AdvisoryRangeRequest",
        "description": "Request for advisory calculations over a time range."
      },
      "AdvisoryRangeResponse": {
        "properties": {
          "start": {
            "type": "string",
            "title": "Start",
            "description": "Start time ISO format"
          },
          "end": {
            "type": "string",
            "title": "End",
            "description": "End time ISO format"
          },
          "interval_minutes": {
            "type": "integer",
            "title": "Interval Minutes",
            "description": "Sampling interval"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "description": "Number of snapshots"
          },
          "snapshots": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Snapshots",
            "description": "Advisory snapshots"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "interval_minutes",
          "count",
          "snapshots"
        ],
        "title": "AdvisoryRangeResponse",
        "description": "Advisory range response."
      },
      "AdvisoryRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "UTC timestamp for calculations"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude",
            "description": "Location latitude",
            "default": 40.7128
          },
          "longitude": {
            "type": "number",
            "title": "Longitude",
            "description": "Location longitude",
            "default": -74.006
          },
          "include_timing": {
            "type": "boolean",
            "title": "Include Timing",
            "description": "Include timing metrics",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "timestamp"
        ],
        "title": "AdvisoryRequest",
        "description": "Request for advisory calculations."
      },
      "AdvisorySnapshotResponse": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Calculation timestamp"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude",
            "description": "Location latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude",
            "description": "Location longitude"
          },
          "advisory_layers": {
            "type": "object",
            "title": "Advisory Layers",
            "description": "Enabled advisory calculations"
          },
          "timing": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timing",
            "description": "Timing metrics if requested"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "latitude",
          "longitude",
          "advisory_layers"
        ],
        "title": "AdvisorySnapshotResponse",
        "description": "Advisory snapshot response."
      },
      "AtlasResult": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "admin1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Admin1"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "country",
          "latitude",
          "longitude",
          "timezone"
        ],
        "title": "AtlasResult"
      },
      "BaseResponse": {
        "properties": {
          "data": {
            "title": "Data",
            "description": "Response data"
          },
          "meta": {
            "type": "object",
            "title": "Meta",
            "description": "Response metadata"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "BaseResponse",
        "description": "Base response with consistent metadata."
      },
      "BaseVedicRequest": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime",
            "description": "UTC datetime in RFC3339 format"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude in decimal degrees (WGS84)"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon",
            "description": "Longitude in decimal degrees (WGS84)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "IANA timezone (if local input provided)"
          },
          "zodiac": {
            "type": "string",
            "const": "sidereal",
            "title": "Zodiac",
            "description": "Zodiac system (sidereal enforced)",
            "default": "sidereal"
          },
          "ayanamsha": {
            "type": "string",
            "enum": [
              "kp",
              "lahiri"
            ],
            "title": "Ayanamsha",
            "description": "Ayanamsha system",
            "default": "kp"
          },
          "node_mode": {
            "type": "string",
            "enum": [
              "true_node",
              "mean_node"
            ],
            "title": "Node Mode",
            "description": "Node calculation mode",
            "default": "true_node"
          },
          "house_system": {
            "type": "string",
            "const": "placidus",
            "title": "House System",
            "description": "House system (Placidus for KP)",
            "default": "placidus"
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "lat",
          "lon"
        ],
        "title": "BaseVedicRequest",
        "description": "Base request for all Vedic calculations with enforced defaults."
      },
      "Body_get_birth_balance_api_v1_dasha_balance_post": {
        "properties": {
          "birth_time": {
            "type": "string",
            "format": "date-time",
            "title": "Birth Time",
            "description": "Birth UTC timestamp"
          },
          "moon_longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 360.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Longitude",
            "description": "Pre-calculated Moon longitude"
          }
        },
        "type": "object",
        "required": [
          "birth_time"
        ],
        "title": "Body_get_birth_balance_api_v1_dasha_balance_post"
      },
      "Body_get_node_statistics_api_v1_nodes_statistics_post": {
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start",
            "description": "Start of analysis period"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End",
            "description": "End of analysis period"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "Body_get_node_statistics_api_v1_nodes_statistics_post"
      },
      "ChainRequest": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime",
            "description": "UTC datetime in RFC3339 format"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude in decimal degrees (WGS84)"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon",
            "description": "Longitude in decimal degrees (WGS84)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "IANA timezone (if local input provided)"
          },
          "zodiac": {
            "type": "string",
            "const": "sidereal",
            "title": "Zodiac",
            "description": "Zodiac system (sidereal enforced)",
            "default": "sidereal"
          },
          "ayanamsha": {
            "type": "string",
            "const": "kp",
            "title": "Ayanamsha",
            "description": "KP Ayanamsha (enforced for KP)",
            "default": "kp"
          },
          "node_mode": {
            "type": "string",
            "enum": [
              "true_node",
              "mean_node"
            ],
            "title": "Node Mode",
            "description": "Node calculation mode",
            "default": "true_node"
          },
          "house_system": {
            "type": "string",
            "const": "placidus",
            "title": "House System",
            "description": "House system (Placidus for KP)",
            "default": "placidus"
          },
          "target": {
            "type": "object",
            "title": "Target",
            "description": "Target for chain calculation"
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "lat",
          "lon",
          "target"
        ],
        "title": "ChainRequest",
        "description": "Request for KP chain calculation (NL \u2192 SL \u2192 SSL)."
      },
      "ChangeRef": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "NL",
              "SL",
              "SL2",
              "SIGN"
            ],
            "title": "Type",
            "description": "Type of change"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Timestamp of change (NY time ISO)"
          },
          "delta_seconds": {
            "type": "integer",
            "title": "Delta Seconds",
            "description": "Seconds from current slice to change"
          },
          "from_lord": {
            "type": "integer",
            "title": "From Lord",
            "description": "Previous lord ID"
          },
          "to_lord": {
            "type": "integer",
            "title": "To Lord",
            "description": "New lord ID"
          }
        },
        "type": "object",
        "required": [
          "type",
          "timestamp",
          "delta_seconds",
          "from_lord",
          "to_lord"
        ],
        "title": "ChangeRef",
        "description": "Reference to a nearby lord change event"
      },
      "CityRef": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "description": "Latitude in degrees [-90, 90]"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "description": "Longitude in degrees [-180, 180]"
          },
          "elevation": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 10000.0,
                "minimum": -1000.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Elevation",
            "description": "Elevation in meters [-1000, 10000]"
          }
        },
        "type": "object",
        "required": [
          "id",
          "latitude",
          "longitude"
        ],
        "title": "CityRef"
      },
      "ConfigDryrunRequest": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date to test on",
            "example": "2025-09-05"
          },
          "ticker": {
            "type": "string",
            "title": "Ticker",
            "description": "Ticker symbol",
            "default": "TSLA"
          },
          "config": {
            "type": "object",
            "title": "Config",
            "description": "Test configuration"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System identifier",
            "default": "KP_STRATEGY"
          }
        },
        "type": "object",
        "required": [
          "date",
          "config"
        ],
        "title": "ConfigDryrunRequest",
        "description": "Request for configuration dry run."
      },
      "ConfluenceAnalysis": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether confluence analysis was enabled"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/ConfluenceEvent"
            },
            "type": "array",
            "title": "Events",
            "description": "Detected confluence events"
          },
          "event_count": {
            "type": "integer",
            "title": "Event Count",
            "description": "Total confluence event count"
          }
        },
        "type": "object",
        "required": [
          "enabled",
          "events",
          "event_count"
        ],
        "title": "ConfluenceAnalysis",
        "description": "Confluence analysis results"
      },
      "ConfluenceEvent": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Confluence timestamp (UTC ISO)"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Confluence type"
          },
          "strength": {
            "type": "number",
            "title": "Strength",
            "description": "Confluence strength score (0-100)"
          },
          "signal_count": {
            "type": "integer",
            "title": "Signal Count",
            "description": "Number of contributing signals"
          },
          "timeframes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Timeframes",
            "description": "Contributing timeframes"
          },
          "planets": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Planets",
            "description": "Contributing planet IDs"
          },
          "levels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Levels",
            "description": "Contributing KP levels"
          },
          "direction": {
            "type": "string",
            "title": "Direction",
            "description": "Overall confluence direction"
          },
          "signals": {
            "items": {
              "$ref": "#/components/schemas/EnhancedSignal"
            },
            "type": "array",
            "title": "Signals",
            "description": "Contributing signals"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "type",
          "strength",
          "signal_count",
          "timeframes",
          "planets",
          "levels",
          "direction",
          "signals"
        ],
        "title": "ConfluenceEvent",
        "description": "Confluence event across multiple timeframes and planets"
      },
      "DashaChangesRequest": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Date to check for changes (UTC)"
          },
          "birth_time": {
            "type": "string",
            "format": "date-time",
            "title": "Birth Time",
            "description": "Birth UTC timestamp"
          },
          "moon_longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 360.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Longitude",
            "description": "Pre-calculated Moon longitude at birth"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "Dasha system (always KP_DASHA)",
            "default": "KP_DASHA"
          },
          "levels": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Levels",
            "description": "Number of levels to check (1-5)",
            "default": 3
          },
          "chart_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chart Id",
            "description": "Optional chart identifier"
          }
        },
        "type": "object",
        "required": [
          "date",
          "birth_time"
        ],
        "title": "DashaChangesRequest",
        "description": "Request model for dasha changes on a specific date"
      },
      "DashaCycleRequest": {
        "properties": {
          "birth_time": {
            "type": "string",
            "format": "date-time",
            "title": "Birth Time",
            "description": "Birth UTC timestamp"
          },
          "moon_longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 360.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Longitude",
            "description": "Pre-calculated Moon longitude at birth"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "Dasha system (always KP_DASHA)",
            "default": "KP_DASHA"
          },
          "levels": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Levels",
            "description": "Depth of nesting (1-5)",
            "default": 2
          },
          "chart_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chart Id",
            "description": "Optional chart identifier"
          }
        },
        "type": "object",
        "required": [
          "birth_time"
        ],
        "title": "DashaCycleRequest",
        "description": "Request model for full dasha cycle"
      },
      "DashaRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Reference UTC timestamp"
          },
          "birth_time": {
            "type": "string",
            "format": "date-time",
            "title": "Birth Time",
            "description": "Birth UTC timestamp"
          },
          "moon_longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 360.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Longitude",
            "description": "Pre-calculated Moon longitude at birth"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "Dasha system (always KP_DASHA)",
            "default": "KP_DASHA"
          },
          "levels": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Levels",
            "description": "Number of levels to calculate (1-5)",
            "default": 3
          },
          "chart_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chart Id",
            "description": "Optional chart identifier for caching"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "birth_time"
        ],
        "title": "DashaRequest",
        "description": "Request model for dasha calculations"
      },
      "DependencyCheck": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Check status: ok, warning, error"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if failed"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DependencyCheck",
        "description": "Individual dependency check result."
      },
      "DetectEventsRequest": {
        "properties": {
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts",
            "description": "UTC timestamp for detection"
          },
          "return_mode": {
            "type": "string",
            "title": "Return Mode",
            "description": "Return mode: 'topN', 'all', 'threshold'",
            "default": "topN"
          },
          "n": {
            "type": "integer",
            "title": "N",
            "description": "Number of events to return (for topN mode)",
            "default": 10
          },
          "threshold": {
            "type": "integer",
            "title": "Threshold",
            "description": "Score threshold (for threshold mode)",
            "default": 60
          },
          "include_aspects": {
            "type": "boolean",
            "title": "Include Aspects",
            "description": "Include aspect calculations",
            "default": true
          },
          "include_dasha": {
            "type": "boolean",
            "title": "Include Dasha",
            "description": "Include dasha alignment",
            "default": true
          },
          "include_promise": {
            "type": "boolean",
            "title": "Include Promise",
            "description": "Include promise checking",
            "default": true
          },
          "include_rp": {
            "type": "boolean",
            "title": "Include Rp",
            "description": "Include ruling planets",
            "default": true
          },
          "birth_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Time",
            "description": "Birth time for dasha"
          },
          "moon_longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Longitude",
            "description": "Birth moon longitude"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Location latitude for RP"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Location longitude for RP"
          }
        },
        "type": "object",
        "required": [
          "ts"
        ],
        "title": "DetectEventsRequest",
        "description": "Request for event detection"
      },
      "EclipseInfo": {
        "properties": {
          "kind": {
            "type": "string",
            "title": "Kind"
          },
          "classification": {
            "type": "string",
            "title": "Classification"
          },
          "peak_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Peak Utc"
          },
          "magnitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Magnitude"
          },
          "saros": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saros"
          },
          "gamma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gamma"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "contacts": {
            "additionalProperties": {
              "type": "string",
              "format": "date-time"
            },
            "type": "object",
            "title": "Contacts"
          },
          "meta": {
            "type": "object",
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "classification",
          "peak_utc",
          "magnitude",
          "saros",
          "gamma",
          "duration_minutes",
          "contacts",
          "meta"
        ],
        "title": "EclipseInfo",
        "description": "Eclipse information"
      },
      "EclipseSearchRequest": {
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start",
            "description": "Start of search range (UTC)"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End",
            "description": "End of search range (UTC)"
          },
          "eclipse_type": {
            "type": "string",
            "enum": [
              "solar",
              "lunar",
              "both"
            ],
            "title": "Eclipse Type",
            "description": "Type of eclipses to find",
            "default": "both"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "EclipseSearchRequest",
        "description": "Request for eclipse search"
      },
      "EclipseSearchResponse": {
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End"
          },
          "solar": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EclipseInfo"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Solar"
          },
          "lunar": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EclipseInfo"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lunar"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "total_count"
        ],
        "title": "EclipseSearchResponse",
        "description": "Response for eclipse search"
      },
      "EnhancedSignal": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Signal timestamp (NY ISO)"
          },
          "timeframe": {
            "type": "string",
            "title": "Timeframe",
            "description": "Signal timeframe (1m, 5m, etc.)"
          },
          "planet_id": {
            "type": "integer",
            "title": "Planet Id",
            "description": "Planet ID"
          },
          "planet_name": {
            "type": "string",
            "title": "Planet Name",
            "description": "Planet name"
          },
          "position": {
            "type": "number",
            "title": "Position",
            "description": "Planet longitude in degrees"
          },
          "speed": {
            "type": "number",
            "title": "Speed",
            "description": "Planet speed in degrees/day"
          },
          "nl": {
            "type": "integer",
            "title": "Nl",
            "description": "Nakshatra lord ID"
          },
          "sl": {
            "type": "integer",
            "title": "Sl",
            "description": "Sub lord ID"
          },
          "sl2": {
            "type": "integer",
            "title": "Sl2",
            "description": "2nd sub lord ID"
          },
          "signal_type": {
            "type": "string",
            "title": "Signal Type",
            "description": "Signal type (immediate, near_term, etc.)"
          },
          "strength": {
            "type": "number",
            "title": "Strength",
            "description": "Signal strength (0-100)"
          },
          "level": {
            "type": "string",
            "title": "Level",
            "description": "Primary KP level change (nl, sl, sl2)"
          },
          "direction": {
            "type": "string",
            "title": "Direction",
            "description": "Signal direction (bullish, bearish, neutral)"
          },
          "volume_profile": {
            "type": "string",
            "title": "Volume Profile",
            "description": "Volume profile classification"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "timeframe",
          "planet_id",
          "planet_name",
          "position",
          "speed",
          "nl",
          "sl",
          "sl2",
          "signal_type",
          "strength",
          "level",
          "direction",
          "volume_profile"
        ],
        "title": "EnhancedSignal",
        "description": "Enhanced KP timing signal with multi-timeframe context"
      },
      "EnhancedSignalsMetadata": {
        "properties": {
          "generated_at": {
            "type": "string",
            "title": "Generated At",
            "description": "Response generation timestamp"
          },
          "cache_key": {
            "type": "string",
            "title": "Cache Key",
            "description": "Cache key used"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms",
            "description": "Processing time in milliseconds"
          },
          "performance_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance Stats",
            "description": "Performance statistics"
          }
        },
        "type": "object",
        "required": [
          "generated_at",
          "cache_key",
          "processing_time_ms"
        ],
        "title": "EnhancedSignalsMetadata",
        "description": "Metadata for enhanced signals response"
      },
      "EnhancedSignalsRequest": {
        "properties": {
          "use_cache": {
            "type": "boolean",
            "title": "Use Cache",
            "description": "Use Redis/cache for faster responses",
            "default": true
          },
          "cache_ttl": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cache Ttl",
            "description": "Cache TTL in seconds"
          },
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date in YYYY-MM-DD format (NY time)"
          },
          "timeframes": {
            "items": {
              "type": "string",
              "enum": [
                "1m",
                "5m",
                "15m",
                "1h",
                "4h",
                "1d"
              ]
            },
            "type": "array",
            "title": "Timeframes",
            "description": "Timeframes for multi-timeframe analysis",
            "default": [
              "1m",
              "5m",
              "15m",
              "1h"
            ]
          },
          "planet_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 9,
            "minItems": 1,
            "title": "Planet Ids",
            "description": "Planet IDs to analyze (1-9)",
            "default": [
              2
            ]
          },
          "include_confluence": {
            "type": "boolean",
            "title": "Include Confluence",
            "description": "Include confluence detection across timeframes and planets",
            "default": true
          },
          "streaming_enabled": {
            "type": "boolean",
            "title": "Streaming Enabled",
            "description": "Enable real-time streaming of signal updates",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "date"
        ],
        "title": "EnhancedSignalsRequest",
        "description": "Request for enhanced KP timing signals with multi-timeframe analysis",
        "example": {
          "date": "2025-08-20",
          "include_confluence": true,
          "planet_ids": [
            2,
            3
          ],
          "streaming_enabled": false,
          "timeframes": [
            "1m",
            "5m",
            "15m",
            "1h"
          ],
          "use_cache": true
        }
      },
      "EnhancedSignalsResponse": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Analysis date"
          },
          "timeframes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TimeframeAnalysis"
            },
            "type": "object",
            "title": "Timeframes",
            "description": "Analysis by timeframe"
          },
          "planets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/PlanetSignalAnalysis"
            },
            "type": "object",
            "title": "Planets",
            "description": "Analysis by planet"
          },
          "confluence": {
            "$ref": "#/components/schemas/ConfluenceAnalysis",
            "description": "Confluence analysis"
          },
          "metadata": {
            "$ref": "#/components/schemas/EnhancedSignalsMetadata",
            "description": "Response metadata"
          }
        },
        "type": "object",
        "required": [
          "date",
          "timeframes",
          "planets",
          "confluence",
          "metadata"
        ],
        "title": "EnhancedSignalsResponse",
        "description": "Enhanced KP timing signals response with multi-timeframe analysis"
      },
      "EventResponse": {
        "properties": {
          "events": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Events",
            "description": "List of detected events"
          },
          "metrics": {
            "type": "object",
            "title": "Metrics",
            "description": "Performance metrics"
          },
          "moon_chain": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Chain",
            "description": "Current Moon KP chain"
          }
        },
        "type": "object",
        "required": [
          "events",
          "metrics"
        ],
        "title": "EventResponse",
        "description": "Transit event response"
      },
      "FeatureStatusResponse": {
        "properties": {
          "enabled": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Enabled",
            "description": "Enabled feature modules"
          },
          "available": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available",
            "description": "Available feature modules"
          },
          "configuration": {
            "type": "object",
            "title": "Configuration",
            "description": "Feature configuration"
          }
        },
        "type": "object",
        "required": [
          "enabled",
          "available",
          "configuration"
        ],
        "title": "FeatureStatusResponse",
        "description": "Feature flag status response."
      },
      "FeaturesPostRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "ISO8601 timestamp (UTC)"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/CityRef"
            },
            "type": "array",
            "title": "Locations"
          },
          "house_system": {
            "type": "string",
            "enum": [
              "KP",
              "PLACIDUS",
              "BHAVA"
            ],
            "title": "House System",
            "description": "House system",
            "default": "KP"
          },
          "topocentric": {
            "type": "boolean",
            "title": "Topocentric",
            "description": "Topocentric positions for angles",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "locations"
        ],
        "title": "FeaturesPostRequest"
      },
      "FortunaMovementRequest": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Date to track (UTC)"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude"
          },
          "points": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Points",
            "description": "Points to track",
            "default": [
              "FORTUNE",
              "SPIRIT"
            ]
          },
          "interval_hours": {
            "type": "integer",
            "maximum": 24.0,
            "minimum": 1.0,
            "title": "Interval Hours",
            "description": "Tracking interval in hours",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "date",
          "latitude",
          "longitude"
        ],
        "title": "FortunaMovementRequest",
        "description": "Request for tracking fortuna movement",
        "example": {
          "date": "2024-08-20",
          "interval_hours": 1,
          "latitude": 40.7128,
          "longitude": -74.006,
          "points": [
            "FORTUNE",
            "SPIRIT"
          ]
        }
      },
      "FortunaRangeRequest": {
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start",
            "description": "Start time (UTC)"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End",
            "description": "End time (UTC)"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude"
          },
          "point": {
            "type": "string",
            "title": "Point",
            "description": "Fortuna point to track",
            "default": "FORTUNE"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "latitude",
          "longitude"
        ],
        "title": "FortunaRangeRequest",
        "description": "Request for fortuna points over time range",
        "example": {
          "end": "2024-08-20T23:59:59Z",
          "latitude": 40.7128,
          "longitude": -74.006,
          "point": "FORTUNE",
          "start": "2024-08-20T00:00:00Z"
        }
      },
      "FortunaRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Time for calculation (UTC)"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "description": "Location latitude"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "description": "Location longitude"
          },
          "points": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Points",
            "description": "Specific points to calculate (default: all)"
          },
          "include_aspects": {
            "type": "boolean",
            "title": "Include Aspects",
            "description": "Include planetary aspects to points",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "latitude",
          "longitude"
        ],
        "title": "FortunaRequest",
        "description": "Request for fortuna points calculation",
        "example": {
          "include_aspects": true,
          "latitude": 40.7128,
          "longitude": -74.006,
          "points": [
            "FORTUNE",
            "SPIRIT",
            "LOVE"
          ],
          "timestamp": "2024-08-20T14:30:00Z"
        }
      },
      "GeocodeRequest": {
        "properties": {
          "query": {
            "type": "string",
            "minLength": 2,
            "title": "Query",
            "description": "City, region, or location query"
          },
          "limit": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum results to return",
            "default": 5
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "ISO country code filter"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "GeocodeRequest",
        "description": "Request for geocoding and timezone resolution."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthStatus": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Health status: ok, warning, error"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Check timestamp"
          },
          "process_id": {
            "type": "string",
            "title": "Process Id",
            "description": "Process ID as string"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "process_id"
        ],
        "title": "HealthStatus",
        "description": "Basic health status response."
      },
      "HealthSummary": {
        "properties": {
          "total_checks": {
            "type": "integer",
            "title": "Total Checks",
            "description": "Total number of checks"
          },
          "passing": {
            "type": "integer",
            "title": "Passing",
            "description": "Number of passing checks"
          },
          "warnings": {
            "type": "integer",
            "title": "Warnings",
            "description": "Number of warnings"
          },
          "failures": {
            "type": "integer",
            "title": "Failures",
            "description": "Number of failures"
          },
          "success_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success Rate",
            "description": "Success rate percentage"
          }
        },
        "type": "object",
        "required": [
          "total_checks",
          "passing",
          "warnings",
          "failures"
        ],
        "title": "HealthSummary",
        "description": "Health check summary statistics."
      },
      "HoraryResponse": {
        "properties": {
          "adapter_id": {
            "type": "string",
            "title": "Adapter Id"
          },
          "adapter_version": {
            "type": "string",
            "title": "Adapter Version"
          },
          "number": {
            "type": "integer",
            "title": "Number",
            "description": "Horary number 1-249"
          },
          "planet_ruler": {
            "type": "string",
            "title": "Planet Ruler",
            "description": "Ruling planet for the number"
          },
          "moon_ruled": {
            "type": "boolean",
            "title": "Moon Ruled",
            "description": "Whether number is ruled by Moon chain"
          },
          "horary_boost": {
            "type": "number",
            "title": "Horary Boost",
            "description": "Boost factor if Moon ruled"
          },
          "correlation_id": {
            "type": "string",
            "title": "Correlation Id",
            "description": "Request correlation ID"
          }
        },
        "type": "object",
        "required": [
          "adapter_id",
          "adapter_version",
          "number",
          "planet_ruler",
          "moon_ruled",
          "horary_boost",
          "correlation_id"
        ],
        "title": "HoraryResponse",
        "description": "KP Horary calculation response",
        "example": {
          "adapter_id": "kp_horary",
          "adapter_version": "1.0.0",
          "correlation_id": "abc12345",
          "horary_boost": 0.15,
          "moon_ruled": true,
          "number": 123,
          "planet_ruler": "MO"
        }
      },
      "HousesRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "ISO timestamp (UTC or with TZ)"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "description": "Latitude in decimal degrees"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "description": "Longitude in decimal degrees"
          },
          "house_system": {
            "type": "string",
            "enum": [
              "PLACIDUS",
              "BHAVA"
            ],
            "title": "House System",
            "description": "House system to use",
            "default": "PLACIDUS"
          },
          "topocentric": {
            "type": "boolean",
            "title": "Topocentric",
            "description": "Use topocentric calculations",
            "default": false
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "Calculation system",
            "default": "KP_HOUSES"
          },
          "lat": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lat"
          },
          "lon": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lon"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "latitude",
          "longitude"
        ],
        "title": "HousesRequest",
        "description": "Request for house calculations - using standardized field names"
      },
      "HousesResponse": {
        "properties": {
          "system": {
            "type": "string",
            "enum": [
              "PLACIDUS",
              "BHAVA"
            ],
            "title": "System"
          },
          "asc": {
            "type": "number",
            "title": "Asc"
          },
          "mc": {
            "type": "number",
            "title": "Mc"
          },
          "cusps": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Cusps"
          },
          "meta": {
            "type": "object",
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "system",
          "asc",
          "mc",
          "cusps",
          "meta"
        ],
        "title": "HousesResponse"
      },
      "InstantRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "ISO format timestamp",
            "example": "2025-09-05T14:30:00Z"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System identifier",
            "default": "KP_MICRO"
          }
        },
        "type": "object",
        "required": [
          "timestamp"
        ],
        "title": "InstantRequest",
        "description": "Request for instantaneous volatility score."
      },
      "IntradayRequest": {
        "properties": {
          "use_cache": {
            "type": "boolean",
            "title": "Use Cache",
            "description": "Whether to use cached results",
            "default": true
          },
          "cache_ttl": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cache Ttl",
            "description": "Cache TTL in seconds"
          },
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date in YYYY-MM-DD format (NY time)"
          },
          "interval": {
            "type": "string",
            "enum": [
              "2s",
              "5s",
              "15s",
              "30s",
              "1m",
              "5m",
              "15m",
              "30m",
              "1h"
            ],
            "title": "Interval",
            "description": "Time interval for slicing",
            "default": "5s"
          },
          "session_filter": {
            "items": {
              "type": "string",
              "enum": [
                "PRE_MARKET",
                "REGULAR",
                "AFTER_HOURS"
              ]
            },
            "type": "array",
            "title": "Session Filter",
            "description": "Trading sessions to include",
            "default": [
              "REGULAR"
            ]
          },
          "include_off_hours": {
            "type": "boolean",
            "title": "Include Off Hours",
            "description": "Include off-hours data",
            "default": false
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "Calculation system (KP only supported currently)",
            "default": "KP"
          }
        },
        "type": "object",
        "required": [
          "date"
        ],
        "title": "IntradayRequest",
        "description": "Request for intraday signal data",
        "example": {
          "date": "2025-08-20",
          "include_off_hours": false,
          "interval": "5s",
          "session_filter": [
            "REGULAR"
          ],
          "system": "KP"
        }
      },
      "IntradaySlice": {
        "properties": {
          "start": {
            "type": "string",
            "title": "Start",
            "description": "Slice start time (NY ISO)"
          },
          "end": {
            "type": "string",
            "title": "End",
            "description": "Slice end time (NY ISO)"
          },
          "nl": {
            "type": "integer",
            "title": "Nl",
            "description": "Nakshatra lord ID"
          },
          "sl": {
            "type": "integer",
            "title": "Sl",
            "description": "Sub lord ID"
          },
          "sl2": {
            "type": "integer",
            "title": "Sl2",
            "description": "2nd sub lord ID"
          },
          "amd_phase": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "volatility_build",
                  "pre_change",
                  "critical_change",
                  "confirmation",
                  "none"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Amd Phase",
            "description": "AMD phase relative to nearest change",
            "default": "none"
          },
          "change_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChangeRef"
              },
              {
                "type": "null"
              }
            ],
            "description": "Nearest change reference"
          },
          "session": {
            "type": "string",
            "title": "Session",
            "description": "Trading session"
          },
          "position": {
            "type": "number",
            "title": "Position",
            "description": "Planet longitude in degrees"
          },
          "speed": {
            "type": "number",
            "title": "Speed",
            "description": "Planet speed in degrees/day"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "nl",
          "sl",
          "sl2",
          "session",
          "position",
          "speed"
        ],
        "title": "IntradaySlice",
        "description": "Single time slice of intraday data"
      },
      "MetricsResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Metrics collection status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Metrics timestamp"
          },
          "metrics": {
            "type": "object",
            "title": "Metrics",
            "description": "Current metrics data"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error if metrics collection failed"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "metrics"
        ],
        "title": "MetricsResponse",
        "description": "Metrics endpoint response."
      },
      "MicroConfigResponse": {
        "properties": {
          "system": {
            "type": "string",
            "title": "System",
            "description": "System name"
          },
          "weights": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weights",
            "description": "System weights"
          },
          "thresholds": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thresholds",
            "description": "Volatility thresholds"
          },
          "window_sizes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Window Sizes",
            "description": "Window size configuration"
          },
          "feature_flags": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "boolean"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Flags",
            "description": "Feature flags"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Additional configuration metadata"
          }
        },
        "type": "object",
        "required": [
          "system",
          "metadata"
        ],
        "title": "MicroConfigResponse",
        "description": "Micro-timing configuration response."
      },
      "MicroDayResponse": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date in ISO format"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System used for calculation"
          },
          "windows": {
            "items": {
              "$ref": "#/components/schemas/MicroVolatilityWindow"
            },
            "type": "array",
            "title": "Windows",
            "description": "Volatility windows"
          },
          "summary": {
            "type": "object",
            "title": "Summary",
            "description": "Daily summary statistics"
          },
          "computation_time_ms": {
            "type": "number",
            "title": "Computation Time Ms",
            "description": "Computation time in milliseconds"
          }
        },
        "type": "object",
        "required": [
          "date",
          "system",
          "windows",
          "summary",
          "computation_time_ms"
        ],
        "title": "MicroDayResponse",
        "description": "Micro-timing day response."
      },
      "MicroInstantResponse": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Query timestamp"
          },
          "volatility_score": {
            "type": "number",
            "title": "Volatility Score",
            "description": "Current volatility score"
          },
          "strength": {
            "type": "string",
            "title": "Strength",
            "description": "Current strength level"
          },
          "factors": {
            "type": "object",
            "title": "Factors",
            "description": "Contributing factors"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System used for calculation"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "volatility_score",
          "strength",
          "factors",
          "system"
        ],
        "title": "MicroInstantResponse",
        "description": "Instantaneous volatility response."
      },
      "MicroNextResponse": {
        "properties": {
          "next_window": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MicroVolatilityWindow"
              },
              {
                "type": "null"
              }
            ],
            "description": "Next volatility window"
          },
          "time_until_minutes": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Until Minutes",
            "description": "Minutes until next window"
          },
          "current_status": {
            "type": "string",
            "title": "Current Status",
            "description": "Current volatility status"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System used for calculation"
          }
        },
        "type": "object",
        "required": [
          "current_status",
          "system"
        ],
        "title": "MicroNextResponse",
        "description": "Next volatility window response."
      },
      "MicroRangeResponse": {
        "properties": {
          "start_date": {
            "type": "string",
            "title": "Start Date",
            "description": "Start date in ISO format"
          },
          "end_date": {
            "type": "string",
            "title": "End Date",
            "description": "End date in ISO format"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System used for calculation"
          },
          "daily_windows": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Daily Windows",
            "description": "Daily windows by date"
          },
          "total_windows": {
            "type": "integer",
            "title": "Total Windows",
            "description": "Total number of windows"
          },
          "summary": {
            "type": "object",
            "title": "Summary",
            "description": "Range summary statistics"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date",
          "system",
          "daily_windows",
          "total_windows",
          "summary"
        ],
        "title": "MicroRangeResponse",
        "description": "Micro-timing range response."
      },
      "MicroVolatilityWindow": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time",
            "description": "Window start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time",
            "description": "Window end time"
          },
          "strength": {
            "type": "string",
            "title": "Strength",
            "description": "Window strength: high, medium, low"
          },
          "score": {
            "type": "number",
            "title": "Score",
            "description": "Volatility score"
          },
          "factors": {
            "type": "object",
            "title": "Factors",
            "description": "Contributing factors"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time",
          "strength",
          "score",
          "factors"
        ],
        "title": "MicroVolatilityWindow",
        "description": "Individual volatility window."
      },
      "MoonChain": {
        "properties": {
          "nl": {
            "type": "string",
            "title": "Nl",
            "description": "Nakshatra Lord",
            "default": "MO"
          },
          "sl": {
            "type": "string",
            "title": "Sl",
            "description": "Sub Lord",
            "default": "MO"
          },
          "ssl": {
            "type": "string",
            "title": "Ssl",
            "description": "Sub-Sub Lord",
            "default": "MO"
          }
        },
        "type": "object",
        "title": "MoonChain",
        "description": "Moon KP chain with strict validation",
        "example": {
          "nl": "MO",
          "sl": "MO",
          "ssl": "SA"
        }
      },
      "MoonEventInfo": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "type",
          "timestamp",
          "value",
          "metadata"
        ],
        "title": "MoonEventInfo",
        "description": "Moon event information"
      },
      "MoonEventsRequest": {
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start",
            "description": "Start of search range (UTC)"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End",
            "description": "End of search range (UTC)"
          },
          "event_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Event Types",
            "description": "Types of events to find",
            "default": [
              "perigee",
              "apogee",
              "standstill"
            ]
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "MoonEventsRequest",
        "description": "Request for moon events"
      },
      "MoonEventsResponse": {
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/MoonEventInfo"
            },
            "type": "array",
            "title": "Events"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "events",
          "total_count"
        ],
        "title": "MoonEventsResponse",
        "description": "Response for moon events"
      },
      "MoonProfileRequest": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date",
            "description": "Date/time for profile (UTC)"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System identifier",
            "default": "KP_MOON"
          }
        },
        "type": "object",
        "required": [
          "date"
        ],
        "title": "MoonProfileRequest",
        "description": "Request for moon profile"
      },
      "MoonProfileResponse": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "tithi": {
            "type": "string",
            "title": "Tithi"
          },
          "tithi_num": {
            "type": "integer",
            "title": "Tithi Num"
          },
          "paksha": {
            "type": "string",
            "title": "Paksha"
          },
          "velocity_index": {
            "type": "number",
            "title": "Velocity Index"
          },
          "latitude_index": {
            "type": "number",
            "title": "Latitude Index"
          },
          "distance_index": {
            "type": "number",
            "title": "Distance Index"
          },
          "strength": {
            "type": "string",
            "title": "Strength"
          },
          "strength_score": {
            "type": "number",
            "title": "Strength Score"
          },
          "nakshatra": {
            "type": "string",
            "title": "Nakshatra"
          },
          "phase": {
            "type": "string",
            "title": "Phase"
          },
          "illumination": {
            "type": "number",
            "title": "Illumination"
          },
          "anomalies": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Anomalies"
          },
          "system": {
            "type": "string",
            "title": "System"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "date",
          "tithi",
          "tithi_num",
          "paksha",
          "velocity_index",
          "latitude_index",
          "distance_index",
          "strength",
          "strength_score",
          "nakshatra",
          "phase",
          "illumination",
          "anomalies",
          "system"
        ],
        "title": "MoonProfileResponse",
        "description": "Response for moon profile"
      },
      "MoonTriggersRequest": {
        "properties": {
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts",
            "description": "UTC timestamp"
          },
          "planets": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Planets",
            "description": "Planet IDs to check (1-9)"
          },
          "include_weak": {
            "type": "boolean",
            "title": "Include Weak",
            "description": "Include weak gates (<0.3)",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "ts",
          "planets"
        ],
        "title": "MoonTriggersRequest",
        "description": "Request for Moon triggers on specific planets"
      },
      "MuhurtaTaraRequest": {
        "properties": {
          "event_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Event Timestamp",
            "description": "Proposed event time (UTC)"
          },
          "birth_moon_longitudes": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 1,
            "title": "Birth Moon Longitudes",
            "description": "Birth Moon longitudes of participants (degrees)"
          },
          "weights": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weights",
            "description": "Importance weights for each person (sum to 1.0)"
          }
        },
        "type": "object",
        "required": [
          "event_timestamp",
          "birth_moon_longitudes"
        ],
        "title": "MuhurtaTaraRequest",
        "description": "Request for muhurta/electional tara analysis",
        "example": {
          "birth_moon_longitudes": [
            45.5,
            120.3,
            210.7
          ],
          "event_timestamp": "2024-08-25T10:00:00Z",
          "weights": [
            0.5,
            0.25,
            0.25
          ]
        }
      },
      "NextEclipseRequest": {
        "properties": {
          "after": {
            "type": "string",
            "format": "date-time",
            "title": "After",
            "description": "Start searching after this time (UTC)"
          },
          "eclipse_type": {
            "type": "string",
            "enum": [
              "solar",
              "lunar",
              "any"
            ],
            "title": "Eclipse Type",
            "description": "Type of eclipse",
            "default": "any"
          },
          "classification": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Classification",
            "description": "Specific classification (e.g., 'total', 'partial')"
          }
        },
        "type": "object",
        "required": [
          "after"
        ],
        "title": "NextEclipseRequest",
        "description": "Request for next eclipse"
      },
      "NextEclipseResponse": {
        "properties": {
          "found": {
            "type": "boolean",
            "title": "Found"
          },
          "eclipse": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EclipseInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "days_until": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Until"
          },
          "search_params": {
            "type": "object",
            "title": "Search Params"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "found",
          "eclipse",
          "days_until",
          "search_params"
        ],
        "title": "NextEclipseResponse",
        "description": "Response for next eclipse"
      },
      "NodeEventsRequest": {
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start",
            "description": "Start of search period (UTC)"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End",
            "description": "End of search period (UTC)"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "Node system (always KP_NODES)",
            "default": "KP_NODES"
          },
          "include_wobbles": {
            "type": "boolean",
            "title": "Include Wobbles",
            "description": "Include wobble/perturbation peaks",
            "default": false
          },
          "include_diagnostics": {
            "type": "boolean",
            "title": "Include Diagnostics",
            "description": "Include solar elongation diagnostics",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "NodeEventsRequest",
        "description": "Request model for node events"
      },
      "NodeStateResponse": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "speed": {
            "type": "number",
            "title": "Speed"
          },
          "direction": {
            "type": "string",
            "title": "Direction"
          },
          "stationary": {
            "type": "boolean",
            "title": "Stationary"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "ketu_longitude": {
            "type": "number",
            "title": "Ketu Longitude"
          },
          "solar_elongation": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Solar Elongation"
          },
          "meta": {
            "type": "object",
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "speed",
          "direction",
          "stationary",
          "longitude",
          "ketu_longitude",
          "meta"
        ],
        "title": "NodeStateResponse",
        "description": "Response model for current node state"
      },
      "PanchangaExplanationResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Request status"
          },
          "result": {
            "type": "object",
            "title": "Result",
            "description": "Panchanga calculation result"
          },
          "explanation": {
            "type": "object",
            "title": "Explanation",
            "description": "Result explanation"
          },
          "adapter_info": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Adapter Info",
            "description": "Adapter information"
          }
        },
        "type": "object",
        "required": [
          "status",
          "result",
          "explanation",
          "adapter_info"
        ],
        "title": "PanchangaExplanationResponse",
        "description": "Panchanga explanation response."
      },
      "PanchangaHealthResponse": {
        "properties": {
          "adapter_id": {
            "type": "string",
            "title": "Adapter Id",
            "description": "Adapter ID"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Adapter version"
          },
          "health": {
            "type": "object",
            "title": "Health",
            "description": "Health check result"
          },
          "registry_status": {
            "type": "string",
            "title": "Registry Status",
            "description": "Registry status"
          }
        },
        "type": "object",
        "required": [
          "adapter_id",
          "version",
          "health",
          "registry_status"
        ],
        "title": "PanchangaHealthResponse",
        "description": "Panchanga adapter health response."
      },
      "PanchangaRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "UTC timestamp for Panchanga calculation"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "description": "Location latitude"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "description": "Location longitude"
          },
          "include_recommendations": {
            "type": "boolean",
            "title": "Include Recommendations",
            "description": "Include muhurta recommendations",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "timestamp"
        ],
        "title": "PanchangaRequest",
        "description": "Request for Panchanga calculation via SystemAdapter",
        "example": {
          "include_recommendations": true,
          "latitude": 40.7128,
          "longitude": -74.006,
          "timestamp": "2024-08-24T14:30:00Z"
        }
      },
      "PanchangaSchemaResponse": {
        "properties": {
          "adapter_id": {
            "type": "string",
            "title": "Adapter Id",
            "description": "Adapter ID"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Adapter version"
          },
          "schema": {
            "type": "object",
            "title": "Schema",
            "description": "Input/output schema"
          }
        },
        "type": "object",
        "required": [
          "adapter_id",
          "version",
          "schema"
        ],
        "title": "PanchangaSchemaResponse",
        "description": "Panchanga adapter schema response."
      },
      "PartOfFortuneRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Time for calculation (UTC)"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude"
          },
          "include_dignity": {
            "type": "boolean",
            "title": "Include Dignity",
            "description": "Include sign/house dignity analysis",
            "default": true
          },
          "include_aspects": {
            "type": "boolean",
            "title": "Include Aspects",
            "description": "Include aspects from planets",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "latitude",
          "longitude"
        ],
        "title": "PartOfFortuneRequest",
        "description": "Request for Part of Fortune calculation",
        "example": {
          "include_aspects": true,
          "include_dignity": true,
          "latitude": 40.7128,
          "longitude": -74.006,
          "timestamp": "2024-08-20T14:30:00Z"
        }
      },
      "PathRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Eclipse time (UTC)"
          }
        },
        "type": "object",
        "required": [
          "timestamp"
        ],
        "title": "PathRequest",
        "description": "Request for solar eclipse path"
      },
      "PathResponse": {
        "properties": {
          "found": {
            "type": "boolean",
            "title": "Found"
          },
          "eclipse": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EclipseInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "central_line": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Central Line"
          },
          "northern_limit": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Northern Limit"
          },
          "southern_limit": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Southern Limit"
          },
          "max_width_km": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Width Km"
          },
          "timestamps": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "date-time"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamps"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "found",
          "eclipse"
        ],
        "title": "PathResponse",
        "description": "Response for eclipse path"
      },
      "PerformanceStatsResponse": {
        "properties": {
          "total_requests": {
            "type": "integer",
            "title": "Total Requests",
            "description": "Total requests processed"
          },
          "cache_hits": {
            "type": "integer",
            "title": "Cache Hits",
            "description": "Cache hit count"
          },
          "cache_misses": {
            "type": "integer",
            "title": "Cache Misses",
            "description": "Cache miss count"
          },
          "cache_hit_rate": {
            "type": "number",
            "title": "Cache Hit Rate",
            "description": "Cache hit rate percentage"
          },
          "avg_response_time_ms": {
            "type": "number",
            "title": "Avg Response Time Ms",
            "description": "Average response time"
          },
          "p95_response_time_ms": {
            "type": "number",
            "title": "P95 Response Time Ms",
            "description": "95th percentile response time"
          },
          "redis_available": {
            "type": "boolean",
            "title": "Redis Available",
            "description": "Whether Redis is available"
          },
          "service_health": {
            "type": "string",
            "title": "Service Health",
            "description": "Overall service health"
          }
        },
        "type": "object",
        "required": [
          "total_requests",
          "cache_hits",
          "cache_misses",
          "cache_hit_rate",
          "avg_response_time_ms",
          "p95_response_time_ms",
          "redis_available",
          "service_health"
        ],
        "title": "PerformanceStatsResponse",
        "description": "Performance statistics for enhanced signals service"
      },
      "PlanetChain": {
        "properties": {
          "nl": {
            "type": "string",
            "enum": [
              "SU",
              "MO",
              "MA",
              "ME",
              "JU",
              "VE",
              "SA",
              "RA",
              "KE"
            ],
            "title": "Nl",
            "description": "Nakshatra Lord (Star Lord)"
          },
          "sl": {
            "type": "string",
            "enum": [
              "SU",
              "MO",
              "MA",
              "ME",
              "JU",
              "VE",
              "SA",
              "RA",
              "KE"
            ],
            "title": "Sl",
            "description": "Sub Lord"
          },
          "ssl": {
            "type": "string",
            "enum": [
              "SU",
              "MO",
              "MA",
              "ME",
              "JU",
              "VE",
              "SA",
              "RA",
              "KE"
            ],
            "title": "Ssl",
            "description": "Sub-Sub Lord"
          }
        },
        "type": "object",
        "required": [
          "nl",
          "sl",
          "ssl"
        ],
        "title": "PlanetChain",
        "description": "Planet chain with strict validation",
        "example": {
          "nl": "MA",
          "sl": "RA",
          "ssl": "MO"
        }
      },
      "PlanetSignalAnalysis": {
        "properties": {
          "planet_id": {
            "type": "integer",
            "title": "Planet Id",
            "description": "Planet ID"
          },
          "signals": {
            "items": {
              "$ref": "#/components/schemas/EnhancedSignal"
            },
            "type": "array",
            "title": "Signals",
            "description": "All signals for this planet"
          },
          "signal_count": {
            "type": "integer",
            "title": "Signal Count",
            "description": "Total signal count"
          }
        },
        "type": "object",
        "required": [
          "planet_id",
          "signals",
          "signal_count"
        ],
        "title": "PlanetSignalAnalysis",
        "description": "Signal analysis for a specific planet"
      },
      "PlatformInfo": {
        "properties": {
          "system": {
            "type": "string",
            "title": "System",
            "description": "Operating system"
          },
          "machine": {
            "type": "string",
            "title": "Machine",
            "description": "Machine architecture"
          }
        },
        "type": "object",
        "required": [
          "system",
          "machine"
        ],
        "title": "PlatformInfo",
        "description": "Platform information."
      },
      "ProcessInfo": {
        "properties": {
          "pid": {
            "type": "integer",
            "title": "Pid",
            "description": "Process ID"
          },
          "working_directory": {
            "type": "string",
            "title": "Working Directory",
            "description": "Current working directory"
          }
        },
        "type": "object",
        "required": [
          "pid",
          "working_directory"
        ],
        "title": "ProcessInfo",
        "description": "Process information."
      },
      "PromiseCheckRequest": {
        "properties": {
          "natal_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Natal Data",
            "description": "Birth chart data"
          },
          "themes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Themes",
            "description": "Themes to check",
            "default": [
              "FINANCE",
              "GAINS"
            ]
          },
          "planet_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planet Id",
            "description": "Specific planet to check"
          }
        },
        "type": "object",
        "title": "PromiseCheckRequest",
        "description": "Request for promise checking"
      },
      "RPConfig": {
        "properties": {
          "weight_day": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 0.0,
            "title": "Weight Day",
            "description": "Day lord weight",
            "default": 1.0
          },
          "weight_asc": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 0.0,
            "title": "Weight Asc",
            "description": "Ascendant chain weight",
            "default": 1.0
          },
          "weight_moon": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 0.0,
            "title": "Weight Moon",
            "description": "Moon chain weight",
            "default": 1.2
          },
          "fortify_exalted": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Fortify Exalted",
            "description": "Exaltation bonus",
            "default": 0.2
          },
          "fortify_own": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Fortify Own",
            "description": "Own sign bonus",
            "default": 0.1
          }
        },
        "type": "object",
        "title": "RPConfig",
        "description": "Configuration for RP calculation weights",
        "example": {
          "fortify_exalted": 0.2,
          "fortify_own": 0.1,
          "weight_asc": 1.0,
          "weight_day": 1.0,
          "weight_moon": 1.2
        }
      },
      "RPWeights": {
        "properties": {
          "day_lord": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Lord",
            "description": "Weight for day lord component"
          },
          "asc_nl": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asc Nl",
            "description": "Weight for ascendant NL"
          },
          "asc_sl": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asc Sl",
            "description": "Weight for ascendant SL"
          },
          "asc_ssl": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asc Ssl",
            "description": "Weight for ascendant SSL"
          },
          "moon_nl": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Nl",
            "description": "Weight for moon NL"
          },
          "moon_sl": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Sl",
            "description": "Weight for moon SL"
          },
          "moon_ssl": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Ssl",
            "description": "Weight for moon SSL"
          },
          "exalt": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exalt",
            "description": "Bonus for exaltation"
          },
          "own": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Own",
            "description": "Bonus for own sign"
          },
          "normalize": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Normalize",
            "description": "Normalize scores to 0-100"
          },
          "top_k_primary": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 9.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K Primary",
            "description": "Number of primary RP to return"
          }
        },
        "type": "object",
        "title": "RPWeights",
        "description": "Optional custom weights for RP calculation.\n\nAll values are floats; omit to use defaults."
      },
      "RangeRequest": {
        "properties": {
          "start": {
            "type": "string",
            "title": "Start",
            "description": "Start date in YYYY-MM-DD format",
            "example": "2025-09-01"
          },
          "end": {
            "type": "string",
            "title": "End",
            "description": "End date in YYYY-MM-DD format",
            "example": "2025-09-07"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System identifier",
            "default": "KP_MICRO"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "RangeRequest",
        "description": "Request for date range volatility timeline."
      },
      "ReadinessResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Overall status: ready or not_ready"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Check timestamp"
          },
          "checks": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DependencyCheck"
            },
            "type": "object",
            "title": "Checks",
            "description": "Individual dependency checks"
          },
          "summary": {
            "$ref": "#/components/schemas/HealthSummary",
            "description": "Check summary"
          },
          "errors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors",
            "description": "Critical error messages"
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings",
            "description": "Warning messages"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "checks",
          "summary"
        ],
        "title": "ReadinessResponse",
        "description": "Readiness probe response."
      },
      "ShadbalaResponse": {
        "properties": {
          "planets": {
            "additionalProperties": {
              "additionalProperties": {
                "type": "number"
              },
              "type": "object"
            },
            "type": "object",
            "title": "Planets",
            "description": "Planetary strength components"
          },
          "total_strength": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Total Strength",
            "description": "Total strength by planet"
          },
          "strongest_planet": {
            "type": "string",
            "title": "Strongest Planet",
            "description": "Strongest planet"
          },
          "calculation_details": {
            "type": "object",
            "title": "Calculation Details",
            "description": "Calculation breakdown"
          }
        },
        "type": "object",
        "required": [
          "planets",
          "total_strength",
          "strongest_planet",
          "calculation_details"
        ],
        "title": "ShadbalaResponse",
        "description": "Shadbala strength calculation response."
      },
      "SignalsHealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service health status"
          },
          "service": {
            "type": "string",
            "title": "Service",
            "description": "Service name"
          }
        },
        "type": "object",
        "required": [
          "status",
          "service"
        ],
        "title": "SignalsHealthResponse",
        "description": "Signals service health response."
      },
      "StartupResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Overall status: ready or not_ready"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Check timestamp"
          },
          "checks": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DependencyCheck"
            },
            "type": "object",
            "title": "Checks",
            "description": "Individual dependency checks"
          },
          "summary": {
            "$ref": "#/components/schemas/HealthSummary",
            "description": "Check summary"
          },
          "errors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors",
            "description": "Critical error messages"
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings",
            "description": "Warning messages"
          },
          "startup_validation": {
            "type": "string",
            "title": "Startup Validation",
            "description": "Validation completion status"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "checks",
          "summary",
          "startup_validation"
        ],
        "title": "StartupResponse",
        "description": "Startup validation response (extends readiness)."
      },
      "StrategyConfigResponse": {
        "properties": {
          "ticker": {
            "type": "string",
            "title": "Ticker",
            "description": "Ticker symbol"
          },
          "config": {
            "type": "object",
            "title": "Config",
            "description": "Strategy configuration"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Configuration metadata"
          }
        },
        "type": "object",
        "required": [
          "ticker",
          "config",
          "metadata"
        ],
        "title": "StrategyConfigResponse",
        "description": "Strategy configuration response."
      },
      "StrategyDayResponse": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date in ISO format"
          },
          "ticker": {
            "type": "string",
            "title": "Ticker",
            "description": "Ticker symbol"
          },
          "timeline": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Timeline",
            "description": "Confidence timeline"
          },
          "summary": {
            "type": "object",
            "title": "Summary",
            "description": "Daily summary statistics"
          },
          "computation_time_ms": {
            "type": "number",
            "title": "Computation Time Ms",
            "description": "Computation time in milliseconds"
          }
        },
        "type": "object",
        "required": [
          "date",
          "ticker",
          "timeline",
          "summary",
          "computation_time_ms"
        ],
        "title": "StrategyDayResponse",
        "description": "Daily confidence timeline response."
      },
      "StrategyDryRunResponse": {
        "properties": {
          "valid": {
            "type": "boolean",
            "title": "Valid",
            "description": "Configuration validity"
          },
          "test_results": {
            "type": "object",
            "title": "Test Results",
            "description": "Test results"
          },
          "errors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors",
            "description": "Validation errors"
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings",
            "description": "Validation warnings"
          }
        },
        "type": "object",
        "required": [
          "valid",
          "test_results"
        ],
        "title": "StrategyDryRunResponse",
        "description": "Configuration dry run response."
      },
      "StrategyHealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "System health status"
          },
          "active_systems": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Active Systems",
            "description": "Active strategy systems"
          },
          "performance_metrics": {
            "type": "object",
            "title": "Performance Metrics",
            "description": "Performance metrics"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if unhealthy"
          }
        },
        "type": "object",
        "required": [
          "status",
          "active_systems",
          "performance_metrics"
        ],
        "title": "StrategyHealthResponse",
        "description": "Strategy system health response."
      },
      "StrategyWindowResponse": {
        "properties": {
          "ticker": {
            "type": "string",
            "title": "Ticker",
            "description": "Ticker symbol"
          },
          "window_start": {
            "type": "string",
            "format": "date-time",
            "title": "Window Start",
            "description": "Window start time"
          },
          "window_end": {
            "type": "string",
            "format": "date-time",
            "title": "Window End",
            "description": "Window end time"
          },
          "confidence_aggregate": {
            "type": "object",
            "title": "Confidence Aggregate",
            "description": "Aggregated confidence metrics"
          },
          "rules_applied": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Rules Applied",
            "description": "Applied confidence rules"
          }
        },
        "type": "object",
        "required": [
          "ticker",
          "window_start",
          "window_end",
          "confidence_aggregate",
          "rules_applied"
        ],
        "title": "StrategyWindowResponse",
        "description": "Window confidence aggregation response."
      },
      "StreamTokenRequest": {
        "properties": {
          "topic": {
            "type": "string",
            "title": "Topic",
            "description": "Topic to subscribe to"
          },
          "ttl_seconds": {
            "type": "integer",
            "maximum": 300.0,
            "minimum": 30.0,
            "title": "Ttl Seconds",
            "description": "Token TTL in seconds",
            "default": 180
          }
        },
        "type": "object",
        "required": [
          "topic"
        ],
        "title": "StreamTokenRequest",
        "description": "Request for streaming token."
      },
      "TaraAnalysisRequest": {
        "properties": {
          "birth_moon_longitude": {
            "type": "number",
            "exclusiveMaximum": 360.0,
            "minimum": 0.0,
            "title": "Birth Moon Longitude",
            "description": "Birth Moon longitude in degrees"
          },
          "analysis_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Analysis Timestamp",
            "description": "Time to analyze (UTC)"
          }
        },
        "type": "object",
        "required": [
          "birth_moon_longitude",
          "analysis_timestamp"
        ],
        "title": "TaraAnalysisRequest",
        "description": "Request for personal tara analysis",
        "example": {
          "analysis_timestamp": "2024-08-20T14:30:00Z",
          "birth_moon_longitude": 45.5
        }
      },
      "TaraDayRequest": {
        "properties": {
          "birth_moon_longitude": {
            "type": "number",
            "exclusiveMaximum": 360.0,
            "minimum": 0.0,
            "title": "Birth Moon Longitude"
          },
          "analysis_date": {
            "type": "string",
            "format": "date",
            "title": "Analysis Date",
            "description": "Date to analyze (UTC)"
          },
          "hourly": {
            "type": "boolean",
            "title": "Hourly",
            "description": "Return hourly breakdown",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "birth_moon_longitude",
          "analysis_date"
        ],
        "title": "TaraDayRequest",
        "description": "Request for tara analysis over a day",
        "example": {
          "analysis_date": "2024-08-20",
          "birth_moon_longitude": 45.5,
          "hourly": true
        }
      },
      "TimeframeAnalysis": {
        "properties": {
          "interval_seconds": {
            "type": "integer",
            "title": "Interval Seconds",
            "description": "Timeframe interval in seconds"
          },
          "signals": {
            "items": {
              "$ref": "#/components/schemas/EnhancedSignal"
            },
            "type": "array",
            "title": "Signals",
            "description": "Signals for this timeframe"
          },
          "signal_count": {
            "type": "integer",
            "title": "Signal Count",
            "description": "Total signal count"
          },
          "last_update": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Update",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "interval_seconds",
          "signals",
          "signal_count"
        ],
        "title": "TimeframeAnalysis",
        "description": "Analysis results for a specific timeframe"
      },
      "TransitConfigResponse": {
        "properties": {
          "features": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Features",
            "description": "Feature flag status"
          },
          "thresholds": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Thresholds",
            "description": "Scoring thresholds"
          },
          "weights": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Weights",
            "description": "Component weights"
          }
        },
        "type": "object",
        "required": [
          "features",
          "thresholds",
          "weights"
        ],
        "title": "TransitConfigResponse",
        "description": "Transit event configuration response."
      },
      "TransitEventsRequest": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime",
            "description": "UTC datetime in RFC3339 format"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude in decimal degrees (WGS84)"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon",
            "description": "Longitude in decimal degrees (WGS84)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "IANA timezone (if local input provided)"
          },
          "zodiac": {
            "type": "string",
            "const": "sidereal",
            "title": "Zodiac",
            "description": "Zodiac system (sidereal enforced)",
            "default": "sidereal"
          },
          "ayanamsha": {
            "type": "string",
            "const": "kp",
            "title": "Ayanamsha",
            "description": "KP Ayanamsha (enforced for KP)",
            "default": "kp"
          },
          "node_mode": {
            "type": "string",
            "enum": [
              "true_node",
              "mean_node"
            ],
            "title": "Node Mode",
            "description": "Node calculation mode",
            "default": "true_node"
          },
          "house_system": {
            "type": "string",
            "const": "placidus",
            "title": "House System",
            "description": "House system (Placidus for KP)",
            "default": "placidus"
          },
          "window_hours": {
            "type": "integer",
            "maximum": 168.0,
            "minimum": 1.0,
            "title": "Window Hours",
            "description": "Analysis window",
            "default": 24
          },
          "orb_degrees": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 0.1,
            "title": "Orb Degrees",
            "description": "Transit orb",
            "default": 1.0
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "lat",
          "lon"
        ],
        "title": "TransitEventsRequest",
        "description": "Request for KP transit events."
      },
      "TransitGatesResponse": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "ISO timestamp of calculation"
          },
          "moon_chain": {
            "type": "object",
            "title": "Moon Chain",
            "description": "Current Moon KP chain"
          },
          "gates": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Gates",
            "description": "Gate calculations"
          },
          "strongest": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strongest",
            "description": "Strongest gate if any"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "moon_chain",
          "gates"
        ],
        "title": "TransitGatesResponse",
        "description": "Transit gates calculation response."
      },
      "TransitHealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "System health status"
          },
          "moon_chain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moon Chain",
            "description": "Current Moon chain signature"
          },
          "cache_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cache Stats",
            "description": "Cache statistics"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if unhealthy"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "TransitHealthResponse",
        "description": "Transit event system health response."
      },
      "TransitPromiseCheckResponse": {
        "properties": {
          "promise_results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Promise Results",
            "description": "Promise check results for themes"
          },
          "planet_themes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planet Themes",
            "description": "All themes for specific planet"
          }
        },
        "type": "object",
        "required": [
          "promise_results"
        ],
        "title": "TransitPromiseCheckResponse",
        "description": "Transit promise checking response."
      },
      "TransitsWindowRequest": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime",
            "description": "UTC datetime in RFC3339 format"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude in decimal degrees (WGS84)"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon",
            "description": "Longitude in decimal degrees (WGS84)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "IANA timezone (if local input provided)"
          },
          "zodiac": {
            "type": "string",
            "const": "sidereal",
            "title": "Zodiac",
            "description": "Zodiac system (sidereal enforced)",
            "default": "sidereal"
          },
          "ayanamsha": {
            "type": "string",
            "enum": [
              "kp",
              "lahiri"
            ],
            "title": "Ayanamsha",
            "description": "Ayanamsha system",
            "default": "kp"
          },
          "node_mode": {
            "type": "string",
            "enum": [
              "true_node",
              "mean_node"
            ],
            "title": "Node Mode",
            "description": "Node calculation mode",
            "default": "true_node"
          },
          "house_system": {
            "type": "string",
            "const": "placidus",
            "title": "House System",
            "description": "House system (Placidus for KP)",
            "default": "placidus"
          },
          "window_hours": {
            "type": "integer",
            "maximum": 168.0,
            "minimum": 1.0,
            "title": "Window Hours",
            "description": "Analysis window in hours",
            "default": 24
          },
          "filters": {
            "type": "object",
            "title": "Filters",
            "description": "Transit filters"
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "lat",
          "lon"
        ],
        "title": "TransitsWindowRequest",
        "description": "Request for transit window analysis."
      },
      "UniversalTaraRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Time to analyze (UTC)"
          }
        },
        "type": "object",
        "required": [
          "timestamp"
        ],
        "title": "UniversalTaraRequest",
        "description": "Request for universal tara (no birth data)",
        "example": {
          "timestamp": "2024-08-20T14:30:00Z"
        }
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VargaRequest": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime",
            "description": "UTC datetime in RFC3339 format"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude in decimal degrees (WGS84)"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon",
            "description": "Longitude in decimal degrees (WGS84)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "IANA timezone (if local input provided)"
          },
          "zodiac": {
            "type": "string",
            "const": "sidereal",
            "title": "Zodiac",
            "description": "Zodiac system (sidereal enforced)",
            "default": "sidereal"
          },
          "ayanamsha": {
            "type": "string",
            "enum": [
              "kp",
              "lahiri"
            ],
            "title": "Ayanamsha",
            "description": "Ayanamsha system",
            "default": "kp"
          },
          "node_mode": {
            "type": "string",
            "enum": [
              "true_node",
              "mean_node"
            ],
            "title": "Node Mode",
            "description": "Node calculation mode",
            "default": "true_node"
          },
          "house_system": {
            "type": "string",
            "const": "placidus",
            "title": "House System",
            "description": "House system (Placidus for KP)",
            "default": "placidus"
          },
          "varga_type": {
            "type": "string",
            "title": "Varga Type",
            "description": "Varga division (d9, d10, d60, etc.)"
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "lat",
          "lon",
          "varga_type"
        ],
        "title": "VargaRequest",
        "description": "Request for Varga (divisional chart) calculation."
      },
      "VersionResponse": {
        "properties": {
          "api_version": {
            "type": "string",
            "title": "Api Version",
            "description": "API version"
          },
          "facade_version": {
            "type": "string",
            "title": "Facade Version",
            "description": "KP facade version"
          },
          "python_version": {
            "type": "string",
            "title": "Python Version",
            "description": "Python version"
          },
          "environment": {
            "type": "string",
            "title": "Environment",
            "description": "Runtime environment"
          },
          "build_sha": {
            "type": "string",
            "title": "Build Sha",
            "description": "Git build SHA"
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformInfo",
            "description": "Platform information"
          },
          "process": {
            "$ref": "#/components/schemas/ProcessInfo",
            "description": "Process information"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          }
        },
        "type": "object",
        "required": [
          "api_version",
          "facade_version",
          "python_version",
          "environment",
          "build_sha",
          "platform",
          "process",
          "timestamp"
        ],
        "title": "VersionResponse",
        "description": "Version and environment information."
      },
      "VisibilityRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Time to check (UTC)"
          },
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "description": "Latitude in decimal degrees"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "description": "Longitude in decimal degrees"
          },
          "eclipse_type": {
            "type": "string",
            "enum": [
              "solar",
              "lunar"
            ],
            "title": "Eclipse Type",
            "description": "Type of eclipse",
            "default": "solar"
          },
          "lat": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lat"
          },
          "lon": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lon"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "latitude",
          "longitude"
        ],
        "title": "VisibilityRequest",
        "description": "Request for local visibility check"
      },
      "VisibilityResponse": {
        "properties": {
          "eclipse": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EclipseInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "visible": {
            "type": "boolean",
            "title": "Visible"
          },
          "magnitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Magnitude"
          },
          "obscuration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Obscuration"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude"
          },
          "azimuth": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Azimuth"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "max_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "location": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Location"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "eclipse",
          "visible",
          "location"
        ],
        "title": "VisibilityResponse",
        "description": "Response for visibility check"
      },
      "WebSocketHealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service health status"
          },
          "service": {
            "type": "string",
            "title": "Service",
            "description": "Service name"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Service version"
          },
          "stats": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Stats",
            "description": "Connection and message statistics"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if unhealthy"
          }
        },
        "type": "object",
        "required": [
          "status",
          "service",
          "version",
          "stats"
        ],
        "title": "WebSocketHealthResponse",
        "description": "WebSocket service health response."
      },
      "WebSocketStatsResponse": {
        "properties": {
          "websocket_manager": {
            "type": "object",
            "title": "Websocket Manager",
            "description": "WebSocket manager statistics"
          },
          "rate_limiter": {
            "type": "object",
            "title": "Rate Limiter",
            "description": "Rate limiter metrics"
          },
          "service_info": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Service Info",
            "description": "Service information"
          }
        },
        "type": "object",
        "required": [
          "websocket_manager",
          "rate_limiter",
          "service_info"
        ],
        "title": "WebSocketStatsResponse",
        "description": "WebSocket detailed statistics response."
      },
      "WindowRequest": {
        "properties": {
          "start": {
            "type": "string",
            "title": "Start",
            "description": "Start timestamp in ISO format",
            "example": "2025-09-05T14:00:00Z"
          },
          "end": {
            "type": "string",
            "title": "End",
            "description": "End timestamp in ISO format",
            "example": "2025-09-05T15:00:00Z"
          },
          "ticker": {
            "type": "string",
            "title": "Ticker",
            "description": "Ticker symbol",
            "default": "TSLA",
            "example": "TSLA"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System identifier",
            "default": "KP_STRATEGY"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "WindowRequest",
        "description": "Request for time window aggregation."
      },
      "api__models__responses__RulingPlanetsResponse": {
        "properties": {
          "ascendant_lords": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Ascendant Lords",
            "description": "Ascendant sign, star, and sub lords"
          },
          "moon_lords": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Moon Lords",
            "description": "Moon sign, star, and sub lords"
          },
          "day_lord": {
            "type": "string",
            "title": "Day Lord",
            "description": "Day lord (Vara)"
          },
          "hora_lord": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hora Lord",
            "description": "Hora lord (planetary hour)"
          },
          "calculation_time": {
            "type": "string",
            "format": "date-time",
            "title": "Calculation Time",
            "description": "Calculation timestamp"
          }
        },
        "type": "object",
        "required": [
          "ascendant_lords",
          "moon_lords",
          "day_lord",
          "calculation_time"
        ],
        "title": "RulingPlanetsResponse",
        "description": "KP Ruling Planets calculation response."
      },
      "api__routers__advisory__RulingPlanetsRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "UTC timestamp"
          },
          "ascendant": {
            "type": "number",
            "exclusiveMaximum": 360.0,
            "minimum": 0.0,
            "title": "Ascendant",
            "description": "Ascendant longitude"
          },
          "moon_longitude": {
            "type": "number",
            "exclusiveMaximum": 360.0,
            "minimum": 0.0,
            "title": "Moon Longitude",
            "description": "Moon longitude"
          },
          "sunrise": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sunrise",
            "description": "Sunrise time (UTC)"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "ascendant",
          "moon_longitude"
        ],
        "title": "RulingPlanetsRequest",
        "description": "Request for KP Ruling Planets calculation."
      },
      "api__routers__kp_horary__HoraryRequest": {
        "properties": {
          "timestamp_unix": {
            "type": "integer",
            "title": "Timestamp Unix",
            "description": "UTC timestamp in seconds"
          },
          "mode": {
            "type": "string",
            "enum": [
              "unix_mod",
              "daily_mod",
              "sunrise_mod"
            ],
            "title": "Mode",
            "description": "Horary calculation mode",
            "default": "unix_mod"
          },
          "tz_offset_sec": {
            "type": "integer",
            "title": "Tz Offset Sec",
            "description": "Timezone offset in seconds (for daily_mod)",
            "default": 0
          },
          "sunrise_ts": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sunrise Ts",
            "description": "Sunrise timestamp in UTC seconds (for sunrise_mod)"
          },
          "moon_chain": {
            "$ref": "#/components/schemas/MoonChain",
            "description": "Moon KP chain for boost calculation"
          }
        },
        "type": "object",
        "required": [
          "timestamp_unix"
        ],
        "title": "HoraryRequest",
        "description": "KP Horary calculation request with strict validation",
        "example": {
          "mode": "sunrise_mod",
          "moon_chain": {
            "nl": "MO",
            "sl": "MO",
            "ssl": "SA"
          },
          "sunrise_ts": 1699990800,
          "timestamp_unix": 1700000000,
          "tz_offset_sec": -18000
        }
      },
      "api__routers__kp_ruling_planets__RulingPlanetsRequest": {
        "properties": {
          "weekday_idx": {
            "type": "integer",
            "title": "Weekday Idx",
            "description": "Weekday index: 0=Monday, 1=Tuesday, ..., 6=Sunday"
          },
          "asc_chain": {
            "$ref": "#/components/schemas/PlanetChain",
            "description": "Ascendant KP chain"
          },
          "moon_chain": {
            "$ref": "#/components/schemas/PlanetChain",
            "description": "Moon KP chain"
          },
          "is_exalted": {
            "additionalProperties": {
              "type": "boolean"
            },
            "propertyNames": {
              "enum": [
                "SU",
                "MO",
                "MA",
                "ME",
                "JU",
                "VE",
                "SA",
                "RA",
                "KE"
              ]
            },
            "type": "object",
            "title": "Is Exalted",
            "description": "Exaltation flags per planet"
          },
          "is_own": {
            "additionalProperties": {
              "type": "boolean"
            },
            "propertyNames": {
              "enum": [
                "SU",
                "MO",
                "MA",
                "ME",
                "JU",
                "VE",
                "SA",
                "RA",
                "KE"
              ]
            },
            "type": "object",
            "title": "Is Own",
            "description": "Own sign flags per planet"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RPConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "Custom configuration weights"
          }
        },
        "type": "object",
        "required": [
          "weekday_idx",
          "asc_chain",
          "moon_chain"
        ],
        "title": "RulingPlanetsRequest",
        "description": "KP Ruling Planets calculation request",
        "example": {
          "asc_chain": {
            "nl": "MA",
            "sl": "RA",
            "ssl": "MO"
          },
          "is_exalted": {
            "JU": true
          },
          "is_own": {
            "MA": true
          },
          "moon_chain": {
            "nl": "MO",
            "sl": "MO",
            "ssl": "SA"
          },
          "weekday_idx": 0
        }
      },
      "api__routers__kp_ruling_planets__RulingPlanetsResponse": {
        "properties": {
          "adapter_id": {
            "type": "string",
            "title": "Adapter Id"
          },
          "adapter_version": {
            "type": "string",
            "title": "Adapter Version"
          },
          "day_lord": {
            "type": "string",
            "enum": [
              "SU",
              "MO",
              "MA",
              "ME",
              "JU",
              "VE",
              "SA",
              "RA",
              "KE"
            ],
            "title": "Day Lord"
          },
          "rp_ranked": {
            "items": {
              "prefixItems": [
                {
                  "type": "string",
                  "enum": [
                    "SU",
                    "MO",
                    "MA",
                    "ME",
                    "JU",
                    "VE",
                    "SA",
                    "RA",
                    "KE"
                  ]
                },
                {
                  "type": "number"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Rp Ranked"
          },
          "rp_primary": {
            "items": {
              "type": "string",
              "enum": [
                "SU",
                "MO",
                "MA",
                "ME",
                "JU",
                "VE",
                "SA",
                "RA",
                "KE"
              ]
            },
            "type": "array",
            "title": "Rp Primary"
          },
          "rp_unique": {
            "items": {
              "type": "string",
              "enum": [
                "SU",
                "MO",
                "MA",
                "ME",
                "JU",
                "VE",
                "SA",
                "RA",
                "KE"
              ]
            },
            "type": "array",
            "title": "Rp Unique"
          },
          "weekday_idx": {
            "type": "integer",
            "title": "Weekday Idx"
          },
          "total_score": {
            "type": "number",
            "title": "Total Score"
          },
          "correlation_id": {
            "type": "string",
            "title": "Correlation Id"
          }
        },
        "type": "object",
        "required": [
          "adapter_id",
          "adapter_version",
          "day_lord",
          "rp_ranked",
          "rp_primary",
          "rp_unique",
          "weekday_idx",
          "total_score",
          "correlation_id"
        ],
        "title": "RulingPlanetsResponse",
        "description": "KP Ruling Planets calculation response",
        "example": {
          "adapter_id": "kp_ruling_planets",
          "adapter_version": "1.0.0",
          "correlation_id": "abc12345",
          "day_lord": "MO",
          "rp_primary": [
            "MO",
            "MA",
            "RA",
            "SA",
            "JU"
          ],
          "rp_ranked": [
            [
              "MO",
              3.4
            ],
            [
              "MA",
              2.0
            ],
            [
              "RA",
              1.0
            ]
          ],
          "total_score": 6.4
        }
      },
      "api__routers__micro__DayRequest": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date in YYYY-MM-DD format",
            "example": "2025-09-05"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System identifier",
            "default": "KP_MICRO"
          }
        },
        "type": "object",
        "required": [
          "date"
        ],
        "title": "DayRequest",
        "description": "Request for single day volatility timeline."
      },
      "api__routers__moon__PanchangaResponse": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "tithi": {
            "type": "string",
            "title": "Tithi"
          },
          "tithi_num": {
            "type": "integer",
            "title": "Tithi Num"
          },
          "tithi_percent": {
            "type": "number",
            "title": "Tithi Percent"
          },
          "paksha": {
            "type": "string",
            "title": "Paksha"
          },
          "nakshatra": {
            "type": "string",
            "title": "Nakshatra"
          },
          "nakshatra_num": {
            "type": "integer",
            "title": "Nakshatra Num"
          },
          "pada": {
            "type": "integer",
            "title": "Pada"
          },
          "yoga": {
            "type": "string",
            "title": "Yoga"
          },
          "yoga_num": {
            "type": "integer",
            "title": "Yoga Num"
          },
          "karana": {
            "type": "string",
            "title": "Karana"
          },
          "karana_num": {
            "type": "integer",
            "title": "Karana Num"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "tithi",
          "tithi_num",
          "tithi_percent",
          "paksha",
          "nakshatra",
          "nakshatra_num",
          "pada",
          "yoga",
          "yoga_num",
          "karana",
          "karana_num"
        ],
        "title": "PanchangaResponse",
        "description": "Response for panchanga elements"
      },
      "api__routers__panchanga__PanchangaResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "type": "object",
            "title": "Data"
          },
          "meta": {
            "type": "object",
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data",
          "meta"
        ],
        "title": "PanchangaResponse",
        "description": "Response from Panchanga SystemAdapter",
        "example": {
          "data": {
            "panchanga": {
              "tithi": {
                "name": "Purnima",
                "number": 15
              }
            },
            "recommendations": {
              "favorable": [
                "meditation",
                "prayers"
              ]
            },
            "timestamp": "2024-08-24T14:30:00Z"
          },
          "meta": {
            "adapter_id": "panchanga",
            "adapter_version": "1.0.0",
            "compute_time_ms": 15.4
          },
          "status": "success"
        }
      },
      "api__routers__strategy__DayRequest": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date in YYYY-MM-DD format",
            "example": "2025-09-05"
          },
          "ticker": {
            "type": "string",
            "title": "Ticker",
            "description": "Ticker symbol",
            "default": "TSLA",
            "example": "TSLA"
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "System identifier",
            "default": "KP_STRATEGY"
          }
        },
        "type": "object",
        "required": [
          "date"
        ],
        "title": "DayRequest",
        "description": "Request for daily confidence timeline."
      },
      "api__routers__v1__jyotish__ChartRequest": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime",
            "description": "UTC datetime in RFC3339 format"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude in decimal degrees (WGS84)"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon",
            "description": "Longitude in decimal degrees (WGS84)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "IANA timezone (if local input provided)"
          },
          "zodiac": {
            "type": "string",
            "const": "sidereal",
            "title": "Zodiac",
            "description": "Zodiac system (sidereal enforced)",
            "default": "sidereal"
          },
          "ayanamsha": {
            "type": "string",
            "enum": [
              "kp",
              "lahiri"
            ],
            "title": "Ayanamsha",
            "description": "Ayanamsha system",
            "default": "kp"
          },
          "node_mode": {
            "type": "string",
            "enum": [
              "true_node",
              "mean_node"
            ],
            "title": "Node Mode",
            "description": "Node calculation mode",
            "default": "true_node"
          },
          "house_system": {
            "type": "string",
            "const": "placidus",
            "title": "House System",
            "description": "House system (Placidus for KP)",
            "default": "placidus"
          },
          "options": {
            "type": "object",
            "title": "Options",
            "description": "Additional calculation options"
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "lat",
          "lon"
        ],
        "title": "ChartRequest",
        "description": "Request for basic Vedic chart calculation."
      },
      "api__routers__v1__kp__ChartRequest": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime",
            "description": "UTC datetime in RFC3339 format"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude in decimal degrees (WGS84)"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon",
            "description": "Longitude in decimal degrees (WGS84)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "IANA timezone (if local input provided)"
          },
          "zodiac": {
            "type": "string",
            "const": "sidereal",
            "title": "Zodiac",
            "description": "Zodiac system (sidereal enforced)",
            "default": "sidereal"
          },
          "ayanamsha": {
            "type": "string",
            "const": "kp",
            "title": "Ayanamsha",
            "description": "KP Ayanamsha (enforced for KP)",
            "default": "kp"
          },
          "node_mode": {
            "type": "string",
            "enum": [
              "true_node",
              "mean_node"
            ],
            "title": "Node Mode",
            "description": "Node calculation mode",
            "default": "true_node"
          },
          "house_system": {
            "type": "string",
            "const": "placidus",
            "title": "House System",
            "description": "House system (Placidus for KP)",
            "default": "placidus"
          },
          "include_significators": {
            "type": "boolean",
            "title": "Include Significators",
            "description": "Include KP significators",
            "default": true
          },
          "include_cuspal_interlinks": {
            "type": "boolean",
            "title": "Include Cuspal Interlinks",
            "description": "Include CLI analysis",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "lat",
          "lon"
        ],
        "title": "ChartRequest",
        "description": "Request for KP chart calculation."
      },
      "api__routers__v1__kp__HoraryRequest": {
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "number",
              "datetime"
            ],
            "title": "Mode",
            "description": "Horary mode"
          },
          "value": {
            "title": "Value",
            "description": "Horary number (1-249) or datetime"
          },
          "question": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Question",
            "description": "Horary question for context"
          }
        },
        "type": "object",
        "required": [
          "mode",
          "value"
        ],
        "title": "HoraryRequest",
        "description": "Request for KP Horary calculation."
      },
      "api__routers__v1__kp__RulingPlanetsRequest": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime",
            "description": "UTC datetime in RFC3339 format"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude in decimal degrees (WGS84)"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon",
            "description": "Longitude in decimal degrees (WGS84)"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "IANA timezone (if local input provided)"
          },
          "zodiac": {
            "type": "string",
            "const": "sidereal",
            "title": "Zodiac",
            "description": "Zodiac system (sidereal enforced)",
            "default": "sidereal"
          },
          "ayanamsha": {
            "type": "string",
            "const": "kp",
            "title": "Ayanamsha",
            "description": "KP Ayanamsha (enforced for KP)",
            "default": "kp"
          },
          "node_mode": {
            "type": "string",
            "enum": [
              "true_node",
              "mean_node"
            ],
            "title": "Node Mode",
            "description": "Node calculation mode",
            "default": "true_node"
          },
          "house_system": {
            "type": "string",
            "const": "placidus",
            "title": "House System",
            "description": "House system (Placidus for KP)",
            "default": "placidus"
          },
          "include_day_lord": {
            "type": "boolean",
            "title": "Include Day Lord",
            "description": "Include day lord analysis",
            "default": true
          },
          "weights": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RPWeights"
              },
              {
                "type": "null"
              }
            ],
            "description": "Custom weights (optional)"
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "lat",
          "lon"
        ],
        "title": "RulingPlanetsRequest",
        "description": "Request for KP Ruling Planets calculation."
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}