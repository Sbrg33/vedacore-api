name: Health Monitor

permissions:
  contents: read
  issues: write

on:
  schedule:
    # Run every 10 minutes during business hours (UTC)
    - cron: '*/10 8-18 * * 1-5'
    # Run hourly outside business hours
    - cron: '0 * * * *'
  workflow_dispatch: {}

concurrency:
  group: health-monitor
  cancel-in-progress: true

jobs:
  health-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check API Health
        run: |
          echo "🏥 Checking VedaCore API Health..."
          
          # Basic connectivity test
          if curl -fsS --connect-timeout 10 --max-time 30 http://${{ secrets.DO_HOST }}/api/v1/health/up; then
            echo "✅ Basic health check passed"
          else
            echo "❌ Basic health check failed"
            exit 1
          fi
          
          # Readiness check
          if curl -fsS --connect-timeout 10 --max-time 30 http://${{ secrets.DO_HOST }}/api/v1/health/ready; then
            echo "✅ Readiness check passed"
          else
            echo "❌ Readiness check failed"
            exit 1
          fi
          
          # Version verification
          VERSION_INFO=$(curl -fsS http://${{ secrets.DO_HOST }}/api/v1/health/version 2>/dev/null || echo "{}")
          echo "📊 Service Info: $VERSION_INFO"
          
          echo "🎉 All health checks passed!"

      - name: Notify on Failure (deduplicated)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `🚨 API Health Check Failed - ${new Date().toISOString().split('T')[0]}`;
            const body = `## 🚨 VedaCore API Health Check Failed
            
            **Time:** ${new Date().toISOString()}
            **Workflow:** ${{ github.workflow }}
            **Run:** ${{ github.run_id }}
            
            ### Details
            The automated health monitoring detected an issue with the VedaCore API deployment.
            
            ### Next Steps
            1. Check the DigitalOcean droplet status
            2. Verify the container is running: \`docker ps\`
            3. Check container logs: \`docker logs vedacore-api\`
            4. Restart if necessary: \`docker restart vedacore-api\`
            
            ### Links
            - [Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [Repository](https://github.com/${{ github.repository }})
            `;
            
            // Check for recent open monitoring issue to avoid duplicates
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'monitoring',
              state: 'open',
              per_page: 5,
              sort: 'created',
              direction: 'desc'
            });
            const existing = issues.find(i => i.title.startsWith('🚨 API Health Check Failed'));
            if (existing) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existing.number,
                body: `Additional failure detected at ${new Date().toISOString()} — see workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`
              });
            } else {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ['bug', 'production', 'monitoring']
              });
            }

  diagnose:
    needs: health-check
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: SSH diagnose (container + local health)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: ${{ secrets.DO_PORT || '22' }}
          script_stop: false
          script: |
            set -euo pipefail
            DIR=/tmp/vedacore-health
            rm -rf "$DIR" && mkdir -p "$DIR"
            docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}' > "$DIR/docker_ps.txt" 2>&1 || true
            docker logs --tail 1000 vedacore-api > "$DIR/logs.txt" 2>&1 || true
            for P in 80 8000; do
              echo "-- Port $P /health/up --" > "$DIR/health_up_$P.txt"
              curl -sv http://127.0.0.1:${P}/api/v1/health/up >> "$DIR/health_up_$P.txt" 2>&1 || true
              curl -s http://127.0.0.1:${P}/api/v1/health/version > "$DIR/version_$P.json" 2>/dev/null || true
            done
            env | sed -E 's/(AUTH_[A-Z_]+=).*/\1***MASKED***/; s/(CORS_ALLOWED_ORIGINS=).*/\1***MASKED***/' | sort > "$DIR/env_masked.txt" || true
            tar -C /tmp -czf /tmp/vedacore-health.tar.gz vedacore-health || true
      - name: Download remote health snapshot
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: ${{ secrets.DO_PORT || '22' }}
          source: "/tmp/vedacore-health.tar.gz"
          target: "."
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: health-snapshot
          path: vedacore-health.tar.gz
